// GENERATED BY ISLE. DO NOT EDIT!
//
// Generated automatically from the instruction-selection DSL code in:
// - .\isle\mba.isle

#![allow(dead_code, unreachable_code, unreachable_patterns)]
#![allow(unused_imports, unused_variables, non_snake_case, unused_mut)]
#![allow(irrefutable_let_patterns, unused_assignments, non_camel_case_types)]

use super::*;  // Pulls in all external types.
use std::marker::PhantomData;

/// Context during lowering: an implementation of this trait
/// must be provided with all external constructors and extractors.
/// A mutable borrow is passed along through all lowering logic.
pub trait Context {
    fn add(&mut self, arg0: AstIdx, arg1: AstIdx) -> SimpleAst;
    fn mul(&mut self, arg0: AstIdx, arg1: AstIdx) -> SimpleAst;
    fn pow(&mut self, arg0: AstIdx, arg1: AstIdx) -> SimpleAst;
    fn and(&mut self, arg0: AstIdx, arg1: AstIdx) -> SimpleAst;
    fn or(&mut self, arg0: AstIdx, arg1: AstIdx) -> SimpleAst;
    fn xor(&mut self, arg0: AstIdx, arg1: AstIdx) -> SimpleAst;
    fn neg(&mut self, arg0: AstIdx) -> SimpleAst;
    fn lshr(&mut self, arg0: AstIdx, arg1: AstIdx) -> SimpleAst;
    fn any(&mut self, arg0: AstIdx) -> SimpleAst;
    fn lookup_value(&mut self, arg0: AstIdx) -> Option<SimpleAst>;
    fn lookup_id(&mut self, arg0: &SimpleAst) -> AstIdx;
    fn constant(&mut self, arg0: u64, arg1: u8) -> SimpleAst;
    fn symbol(&mut self, arg0: u32, arg1: u8) -> SimpleAst;
    fn zext(&mut self, arg0: AstIdx, arg1: u8) -> SimpleAst;
    fn trunc(&mut self, arg0: AstIdx, arg1: u8) -> SimpleAst;
    fn fold_add(&mut self, arg0: AstIdx, arg1: AstIdx) -> SimpleAst;
    fn get_width(&mut self, arg0: AstIdx) -> u8;
    fn is_constant_modulo(&mut self, arg0: u64, arg1: u64, arg2: u8) -> Option<Empty>;
}

pub trait ContextIter {
    type Context;
    type Output;
    fn next(&mut self, ctx: &mut Self::Context) -> Option<Self::Output>;
    fn size_hint(&self) -> (usize, Option<usize>) { (0, None) }
}

pub trait IntoContextIter {
    type Context;
    type Output;
    type IntoIter: ContextIter<Context = Self::Context, Output = Self::Output>;
    fn into_context_iter(self) -> Self::IntoIter;
}

pub trait Length {
    fn len(&self) -> usize;
}

impl<T> Length for std::vec::Vec<T> {
    fn len(&self) -> usize {
        std::vec::Vec::len(self)
    }
}

pub struct ContextIterWrapper<I, C> {
    iter: I,
    _ctx: std::marker::PhantomData<C>,
}
impl<I: Default, C> Default for ContextIterWrapper<I, C> {
    fn default() -> Self {
        ContextIterWrapper {
            iter: I::default(),
            _ctx: std::marker::PhantomData
        }
    }
}
impl<I, C> std::ops::Deref for ContextIterWrapper<I, C> {
    type Target = I;
    fn deref(&self) -> &I {
        &self.iter
    }
}
impl<I, C> std::ops::DerefMut for ContextIterWrapper<I, C> {
    fn deref_mut(&mut self) -> &mut I {
        &mut self.iter
    }
}
impl<I: Iterator, C: Context> From<I> for ContextIterWrapper<I, C> {
    fn from(iter: I) -> Self {
        Self { iter, _ctx: std::marker::PhantomData }
    }
}
impl<I: Iterator, C: Context> ContextIter for ContextIterWrapper<I, C> {
    type Context = C;
    type Output = I::Item;
    fn next(&mut self, _ctx: &mut Self::Context) -> Option<Self::Output> {
        self.iter.next()
    }
    fn size_hint(&self) -> (usize, Option<usize>) {
        self.iter.size_hint()
    }
}
impl<I: IntoIterator, C: Context> IntoContextIter for ContextIterWrapper<I, C> {
    type Context = C;
    type Output = I::Item;
    type IntoIter = ContextIterWrapper<I::IntoIter, C>;
    fn into_context_iter(self) -> Self::IntoIter {
        ContextIterWrapper {
            iter: self.iter.into_iter(),
            _ctx: std::marker::PhantomData
        }
    }
}
impl<T, E: Extend<T>, C> Extend<T> for ContextIterWrapper<E, C> {
    fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {
        self.iter.extend(iter);
    }
}
impl<L: Length, C> Length for ContextIterWrapper<L, C> {
    fn len(&self) -> usize {
        self.iter.len()
    }
}
           

// Generated as internal constructor for term lower.
pub fn constructor_lower<C: Context>(
    ctx: &mut C,
    arg0: &SimpleAst,
) -> Option<SimpleAst> {
    match arg0 {
        &SimpleAst::Add {
            a: v49,
            b: v50,
        } => {
            let v60 = &C::lookup_value(ctx, v49);
            if let Some(v61) = v60 {
                match v61 {
                    &SimpleAst::Add {
                        a: v62,
                        b: v63,
                    } => {
                        let v51 = &C::lookup_value(ctx, v50);
                        if let Some(v52) = v51 {
                            if let &SimpleAst::Mul {
                                a: v249,
                                b: v250,
                            } = v52 {
                                let v251 = &C::lookup_value(ctx, v249);
                                if let Some(v252) = v251 {
                                    if let &SimpleAst::Constant {
                                        c: v253,
                                        width: v254,
                                    } = v252 {
                                        let v285 = &C::lookup_value(ctx, v250);
                                        if let Some(v286) = v285 {
                                            match v286 {
                                                &SimpleAst::And {
                                                    a: v287,
                                                    b: v288,
                                                } => {
                                                    let v289 = &C::lookup_value(ctx, v287);
                                                    if let Some(v290) = v289 {
                                                        if let &SimpleAst::Neg {
                                                            a: v291,
                                                        } = v290 {
                                                            if v62 == v291 {
                                                                let v1110 = &C::lookup_value(ctx, v63);
                                                                if let Some(v1111) = v1110 {
                                                                    if let &SimpleAst::Mul {
                                                                        a: v1112,
                                                                        b: v1113,
                                                                    } = v1111 {
                                                                        let v1235 = &C::lookup_value(ctx, v288);
                                                                        if let Some(v1236) = v1235 {
                                                                            if let &SimpleAst::Mul {
                                                                                a: v1243,
                                                                                b: v1244,
                                                                            } = v1236 {
                                                                                if v1113 == v1244 {
                                                                                    let v1239 = &C::lookup_value(ctx, v1112);
                                                                                    if let Some(v1240) = v1239 {
                                                                                        if let &SimpleAst::Constant {
                                                                                            c: v1241,
                                                                                            width: v1242,
                                                                                        } = v1240 {
                                                                                            let v1245 = &C::lookup_value(ctx, v1243);
                                                                                            if let Some(v1246) = v1245 {
                                                                                                if let &SimpleAst::Constant {
                                                                                                    c: v1247,
                                                                                                    width: v1248,
                                                                                                } = v1246 {
                                                                                                    if v253 == v1247 {
                                                                                                        let v1249 = C::is_constant_modulo(ctx, v1241, 0xFFFFFFFFFFFFFFFE, v1242);
                                                                                                        if let Some(v1250) = v1249 {
                                                                                                            let v1251 = C::is_constant_modulo(ctx, v253, 0x2, v1242);
                                                                                                            if let Some(v1252) = v1251 {
                                                                                                                let v1164 = &C::any(ctx, v62);
                                                                                                                let v1165 = C::lookup_id(ctx, v1164);
                                                                                                                let v1253 = &C::constant(ctx, 0x2, v1242);
                                                                                                                let v1254 = C::lookup_id(ctx, v1253);
                                                                                                                let v1118 = &C::any(ctx, v1113);
                                                                                                                let v1119 = C::lookup_id(ctx, v1118);
                                                                                                                let v1255 = &C::mul(ctx, v1254, v1119);
                                                                                                                let v1256 = C::lookup_id(ctx, v1255);
                                                                                                                let v1257 = &C::xor(ctx, v1165, v1256);
                                                                                                                // Rule at .\isle\mba.isle line 898.
                                                                                                                return Some(v1257.clone());
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                &SimpleAst::Or {
                                                    a: v530,
                                                    b: v531,
                                                } => {
                                                    let v64 = &C::lookup_value(ctx, v62);
                                                    if let Some(v65) = v64 {
                                                        if let &SimpleAst::And {
                                                            a: v1412,
                                                            b: v1413,
                                                        } = v65 {
                                                            let v336 = C::is_constant_modulo(ctx, v253, 0x2, v254);
                                                            if let Some(v337) = v336 {
                                                                let v1110 = &C::lookup_value(ctx, v63);
                                                                if let Some(v1111) = v1110 {
                                                                    if let &SimpleAst::Xor {
                                                                        a: v1414,
                                                                        b: v1415,
                                                                    } = v1111 {
                                                                        if v530 == v1414 {
                                                                            let v1416 = &C::lookup_value(ctx, v1415);
                                                                            if let Some(v1417) = v1416 {
                                                                                if let &SimpleAst::Or {
                                                                                    a: v1418,
                                                                                    b: v1419,
                                                                                } = v1417 {
                                                                                    if v1412 == v1418 {
                                                                                        if v1413 == v1419 {
                                                                                            let v1420 = &C::lookup_value(ctx, v531);
                                                                                            if let Some(v1421) = v1420 {
                                                                                                if let &SimpleAst::Neg {
                                                                                                    a: v1422,
                                                                                                } = v1421 {
                                                                                                    let v1423 = &C::lookup_value(ctx, v1422);
                                                                                                    if let Some(v1424) = v1423 {
                                                                                                        if let &SimpleAst::And {
                                                                                                            a: v1425,
                                                                                                            b: v1426,
                                                                                                        } = v1424 {
                                                                                                            if v1412 == v1425 {
                                                                                                                if v1413 == v1426 {
                                                                                                                    let v536 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFE, v254);
                                                                                                                    let v537 = C::lookup_id(ctx, v536);
                                                                                                                    let v1427 = &C::any(ctx, v1414);
                                                                                                                    let v1428 = C::lookup_id(ctx, v1427);
                                                                                                                    let v1429 = &C::any(ctx, v1412);
                                                                                                                    let v1430 = C::lookup_id(ctx, v1429);
                                                                                                                    let v1431 = &C::xor(ctx, v1428, v1430);
                                                                                                                    let v1432 = C::lookup_id(ctx, v1431);
                                                                                                                    let v1433 = &C::any(ctx, v1413);
                                                                                                                    let v1434 = C::lookup_id(ctx, v1433);
                                                                                                                    let v1435 = &C::xor(ctx, v1432, v1434);
                                                                                                                    let v1436 = C::lookup_id(ctx, v1435);
                                                                                                                    let v1437 = &C::add(ctx, v537, v1436);
                                                                                                                    // Rule at .\isle\mba.isle line 995.
                                                                                                                    return Some(v1437.clone());
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                _ => {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::Mul {
                        a: v270,
                        b: v271,
                    } => {
                        let v276 = &C::lookup_value(ctx, v271);
                        if let Some(v277) = v276 {
                            match v277 {
                                &SimpleAst::Add {
                                    a: v1438,
                                    b: v1439,
                                } => {
                                    let v51 = &C::lookup_value(ctx, v50);
                                    if let Some(v52) = v51 {
                                        if let &SimpleAst::Mul {
                                            a: v249,
                                            b: v250,
                                        } = v52 {
                                            let v251 = &C::lookup_value(ctx, v249);
                                            if let Some(v252) = v251 {
                                                if let &SimpleAst::Constant {
                                                    c: v253,
                                                    width: v254,
                                                } = v252 {
                                                    let v272 = &C::lookup_value(ctx, v270);
                                                    if let Some(v273) = v272 {
                                                        if let &SimpleAst::Constant {
                                                            c: v306,
                                                            width: v307,
                                                        } = v273 {
                                                            let v285 = &C::lookup_value(ctx, v250);
                                                            if let Some(v286) = v285 {
                                                                if let &SimpleAst::Or {
                                                                    a: v530,
                                                                    b: v531,
                                                                } = v286 {
                                                                    let v1226 = C::is_constant_modulo(ctx, v306, 0xFFFFFFFFFFFFFFFF, v307);
                                                                    if let Some(v1227) = v1226 {
                                                                        let v1420 = &C::lookup_value(ctx, v531);
                                                                        if let Some(v1421) = v1420 {
                                                                            if let &SimpleAst::Neg {
                                                                                a: v1422,
                                                                            } = v1421 {
                                                                                let v1423 = &C::lookup_value(ctx, v1422);
                                                                                if let Some(v1424) = v1423 {
                                                                                    if let &SimpleAst::And {
                                                                                        a: v1425,
                                                                                        b: v1426,
                                                                                    } = v1424 {
                                                                                        let v1440 = &C::lookup_value(ctx, v1438);
                                                                                        if let Some(v1441) = v1440 {
                                                                                            if let &SimpleAst::And {
                                                                                                a: v1442,
                                                                                                b: v1443,
                                                                                            } = v1441 {
                                                                                                if v1425 == v1442 {
                                                                                                    if v1426 == v1443 {
                                                                                                        let v1444 = &C::lookup_value(ctx, v1439);
                                                                                                        if let Some(v1445) = v1444 {
                                                                                                            if let &SimpleAst::Xor {
                                                                                                                a: v1446,
                                                                                                                b: v1447,
                                                                                                            } = v1445 {
                                                                                                                if v530 == v1446 {
                                                                                                                    let v1448 = &C::lookup_value(ctx, v1447);
                                                                                                                    if let Some(v1449) = v1448 {
                                                                                                                        if let &SimpleAst::Or {
                                                                                                                            a: v1450,
                                                                                                                            b: v1451,
                                                                                                                        } = v1449 {
                                                                                                                            if v1425 == v1450 {
                                                                                                                                if v1426 == v1451 {
                                                                                                                                    let v1452 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFE, v307);
                                                                                                                                    if let Some(v1453) = v1452 {
                                                                                                                                        let v1454 = &C::constant(ctx, 0x2, v307);
                                                                                                                                        let v1455 = C::lookup_id(ctx, v1454);
                                                                                                                                        let v322 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v307);
                                                                                                                                        let v323 = C::lookup_id(ctx, v322);
                                                                                                                                        let v1456 = &C::any(ctx, v1446);
                                                                                                                                        let v1457 = C::lookup_id(ctx, v1456);
                                                                                                                                        let v1458 = &C::any(ctx, v1442);
                                                                                                                                        let v1459 = C::lookup_id(ctx, v1458);
                                                                                                                                        let v1460 = &C::xor(ctx, v1457, v1459);
                                                                                                                                        let v1461 = C::lookup_id(ctx, v1460);
                                                                                                                                        let v1462 = &C::any(ctx, v1443);
                                                                                                                                        let v1463 = C::lookup_id(ctx, v1462);
                                                                                                                                        let v1464 = &C::xor(ctx, v1461, v1463);
                                                                                                                                        let v1465 = C::lookup_id(ctx, v1464);
                                                                                                                                        let v1466 = &C::mul(ctx, v323, v1465);
                                                                                                                                        let v1467 = C::lookup_id(ctx, v1466);
                                                                                                                                        let v1468 = &C::add(ctx, v1455, v1467);
                                                                                                                                        // Rule at .\isle\mba.isle line 1002.
                                                                                                                                        return Some(v1468.clone());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::And {
                                    a: v308,
                                    b: v309,
                                } => {
                                    let v272 = &C::lookup_value(ctx, v270);
                                    if let Some(v273) = v272 {
                                        if let &SimpleAst::Constant {
                                            c: v306,
                                            width: v307,
                                        } = v273 {
                                            let v1226 = C::is_constant_modulo(ctx, v306, 0xFFFFFFFFFFFFFFFF, v307);
                                            if let Some(v1227) = v1226 {
                                                let v51 = &C::lookup_value(ctx, v50);
                                                if let Some(v52) = v51 {
                                                    if let &SimpleAst::Or {
                                                        a: v492,
                                                        b: v493,
                                                    } = v52 {
                                                        if v308 == v493 {
                                                            let v310 = &C::lookup_value(ctx, v309);
                                                            if let Some(v311) = v310 {
                                                                if let &SimpleAst::Neg {
                                                                    a: v312,
                                                                } = v311 {
                                                                    if v312 == v492 {
                                                                        let v1238 = &C::any(ctx, v312);
                                                                        // Rule at .\isle\mba.isle line 891.
                                                                        return Some(v1238.clone());
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                if v50 == v308 {
                                                    let v1228 = &C::any(ctx, v309);
                                                    let v1229 = C::lookup_id(ctx, v1228);
                                                    let v1230 = &C::neg(ctx, v1229);
                                                    let v1231 = C::lookup_id(ctx, v1230);
                                                    let v1232 = &C::any(ctx, v308);
                                                    let v1233 = C::lookup_id(ctx, v1232);
                                                    let v1234 = &C::and(ctx, v1231, v1233);
                                                    // Rule at .\isle\mba.isle line 877.
                                                    return Some(v1234.clone());
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::Xor {
                                    a: v1609,
                                    b: v1610,
                                } => {
                                    let v51 = &C::lookup_value(ctx, v50);
                                    if let Some(v52) = v51 {
                                        if let &SimpleAst::Mul {
                                            a: v249,
                                            b: v250,
                                        } = v52 {
                                            let v251 = &C::lookup_value(ctx, v249);
                                            if let Some(v252) = v251 {
                                                if let &SimpleAst::Mul {
                                                    a: v1622,
                                                    b: v1623,
                                                } = v252 {
                                                    if v270 == v1623 {
                                                        let v285 = &C::lookup_value(ctx, v250);
                                                        if let Some(v286) = v285 {
                                                            if let &SimpleAst::Add {
                                                                a: v1628,
                                                                b: v1629,
                                                            } = v286 {
                                                                let v1611 = &C::lookup_value(ctx, v1610);
                                                                if let Some(v1612) = v1611 {
                                                                    if let &SimpleAst::Neg {
                                                                        a: v1613,
                                                                    } = v1612 {
                                                                        let v1614 = &C::lookup_value(ctx, v1613);
                                                                        if let Some(v1615) = v1614 {
                                                                            if let &SimpleAst::Or {
                                                                                a: v1616,
                                                                                b: v1617,
                                                                            } = v1615 {
                                                                                let v1618 = &C::lookup_value(ctx, v1617);
                                                                                if let Some(v1619) = v1618 {
                                                                                    if let &SimpleAst::And {
                                                                                        a: v1620,
                                                                                        b: v1621,
                                                                                    } = v1619 {
                                                                                        if v1609 == v1620 {
                                                                                            let v1624 = &C::lookup_value(ctx, v1622);
                                                                                            if let Some(v1625) = v1624 {
                                                                                                if let &SimpleAst::Constant {
                                                                                                    c: v1626,
                                                                                                    width: v1627,
                                                                                                } = v1625 {
                                                                                                    let v1630 = &C::lookup_value(ctx, v1628);
                                                                                                    if let Some(v1631) = v1630 {
                                                                                                        if let &SimpleAst::And {
                                                                                                            a: v1632,
                                                                                                            b: v1633,
                                                                                                        } = v1631 {
                                                                                                            if v1609 == v1632 {
                                                                                                                if v1616 == v1633 {
                                                                                                                    let v1634 = &C::lookup_value(ctx, v1629);
                                                                                                                    if let Some(v1635) = v1634 {
                                                                                                                        if let &SimpleAst::Or {
                                                                                                                            a: v1636,
                                                                                                                            b: v1637,
                                                                                                                        } = v1635 {
                                                                                                                            if v1621 == v1636 {
                                                                                                                                let v1638 = &C::lookup_value(ctx, v1637);
                                                                                                                                if let Some(v1639) = v1638 {
                                                                                                                                    if let &SimpleAst::Or {
                                                                                                                                        a: v1640,
                                                                                                                                        b: v1641,
                                                                                                                                    } = v1639 {
                                                                                                                                        if v1616 == v1640 {
                                                                                                                                            let v1642 = &C::lookup_value(ctx, v1641);
                                                                                                                                            if let Some(v1643) = v1642 {
                                                                                                                                                if let &SimpleAst::Neg {
                                                                                                                                                    a: v1644,
                                                                                                                                                } = v1643 {
                                                                                                                                                    if v1609 == v1644 {
                                                                                                                                                        let v1645 = C::is_constant_modulo(ctx, v1626, 0xFFFFFFFFFFFFFFFF, v1627);
                                                                                                                                                        if let Some(v1646) = v1645 {
                                                                                                                                                            let v1647 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v1627);
                                                                                                                                                            let v1648 = C::lookup_id(ctx, v1647);
                                                                                                                                                            let v1649 = &C::any(ctx, v270);
                                                                                                                                                            let v1650 = C::lookup_id(ctx, v1649);
                                                                                                                                                            let v1651 = &C::mul(ctx, v1648, v1650);
                                                                                                                                                            let v1652 = C::lookup_id(ctx, v1651);
                                                                                                                                                            let v1653 = &C::any(ctx, v1616);
                                                                                                                                                            let v1654 = C::lookup_id(ctx, v1653);
                                                                                                                                                            let v1655 = &C::mul(ctx, v1652, v1654);
                                                                                                                                                            // Rule at .\isle\mba.isle line 1064.
                                                                                                                                                            return Some(v1655.clone());
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                    }
                    &SimpleAst::And {
                        a: v486,
                        b: v487,
                    } => {
                        let v51 = &C::lookup_value(ctx, v50);
                        if let Some(v52) = v51 {
                            match v52 {
                                &SimpleAst::Mul {
                                    a: v249,
                                    b: v250,
                                } => {
                                    let v1279 = &C::lookup_value(ctx, v486);
                                    if let Some(v1280) = v1279 {
                                        if let &SimpleAst::Neg {
                                            a: v1281,
                                        } = v1280 {
                                            if v249 == v487 {
                                                let v285 = &C::lookup_value(ctx, v250);
                                                if let Some(v286) = v285 {
                                                    if let &SimpleAst::Mul {
                                                        a: v508,
                                                        b: v509,
                                                    } = v286 {
                                                        let v510 = &C::lookup_value(ctx, v508);
                                                        if let Some(v511) = v510 {
                                                            if let &SimpleAst::Constant {
                                                                c: v512,
                                                                width: v513,
                                                            } = v511 {
                                                                let v514 = &C::lookup_value(ctx, v509);
                                                                if let Some(v515) = v514 {
                                                                    if let &SimpleAst::Constant {
                                                                        c: v1289,
                                                                        width: v1290,
                                                                    } = v515 {
                                                                        let v1291 = C::is_constant_modulo(ctx, v512, 0xFFFFFFFFFFFFFFFF, v513);
                                                                        if let Some(v1292) = v1291 {
                                                                            let v1293 = C::is_constant_modulo(ctx, v1289, 0x1, v513);
                                                                            if let Some(v1294) = v1293 {
                                                                                let v1295 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v513);
                                                                                let v1296 = C::lookup_id(ctx, v1295);
                                                                                let v1282 = &C::any(ctx, v1281);
                                                                                let v1283 = C::lookup_id(ctx, v1282);
                                                                                let v1284 = &C::any(ctx, v487);
                                                                                let v1285 = C::lookup_id(ctx, v1284);
                                                                                let v1286 = &C::and(ctx, v1283, v1285);
                                                                                let v1287 = C::lookup_id(ctx, v1286);
                                                                                let v1297 = &C::mul(ctx, v1296, v1287);
                                                                                // Rule at .\isle\mba.isle line 933.
                                                                                return Some(v1297.clone());
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            if v250 == v487 {
                                                let v251 = &C::lookup_value(ctx, v249);
                                                if let Some(v252) = v251 {
                                                    if let &SimpleAst::Constant {
                                                        c: v253,
                                                        width: v254,
                                                    } = v252 {
                                                        let v397 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFF, v254);
                                                        if let Some(v398) = v397 {
                                                            let v1258 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v254);
                                                            let v1259 = C::lookup_id(ctx, v1258);
                                                            let v1282 = &C::any(ctx, v1281);
                                                            let v1283 = C::lookup_id(ctx, v1282);
                                                            let v1284 = &C::any(ctx, v487);
                                                            let v1285 = C::lookup_id(ctx, v1284);
                                                            let v1286 = &C::and(ctx, v1283, v1285);
                                                            let v1287 = C::lookup_id(ctx, v1286);
                                                            let v1288 = &C::mul(ctx, v1259, v1287);
                                                            // Rule at .\isle\mba.isle line 926.
                                                            return Some(v1288.clone());
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::And {
                                    a: v299,
                                    b: v300,
                                } => {
                                    let v1279 = &C::lookup_value(ctx, v486);
                                    if let Some(v1280) = v1279 {
                                        match v1280 {
                                            &SimpleAst::And {
                                                a: v1501,
                                                b: v1502,
                                            } => {
                                                let v488 = &C::lookup_value(ctx, v299);
                                                if let Some(v489) = v488 {
                                                    if let &SimpleAst::And {
                                                        a: v1506,
                                                        b: v1507,
                                                    } = v489 {
                                                        if v1501 == v1506 {
                                                            let v1357 = &C::lookup_value(ctx, v487);
                                                            if let Some(v1358) = v1357 {
                                                                if let &SimpleAst::Neg {
                                                                    a: v1359,
                                                                } = v1358 {
                                                                    if v300 == v1359 {
                                                                        let v1503 = &C::lookup_value(ctx, v1502);
                                                                        if let Some(v1504) = v1503 {
                                                                            if let &SimpleAst::Neg {
                                                                                a: v1505,
                                                                            } = v1504 {
                                                                                if v1505 == v1507 {
                                                                                    let v1508 = &C::any(ctx, v1501);
                                                                                    let v1509 = C::lookup_id(ctx, v1508);
                                                                                    let v1510 = &C::any(ctx, v1505);
                                                                                    let v1511 = C::lookup_id(ctx, v1510);
                                                                                    let v1512 = &C::any(ctx, v1359);
                                                                                    let v1513 = C::lookup_id(ctx, v1512);
                                                                                    let v1514 = &C::xor(ctx, v1511, v1513);
                                                                                    let v1515 = C::lookup_id(ctx, v1514);
                                                                                    let v1516 = &C::neg(ctx, v1515);
                                                                                    let v1517 = C::lookup_id(ctx, v1516);
                                                                                    let v1518 = &C::and(ctx, v1509, v1517);
                                                                                    // Rule at .\isle\mba.isle line 1028.
                                                                                    return Some(v1518.clone());
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            &SimpleAst::Neg {
                                                a: v1281,
                                            } => {
                                                if v299 == v487 {
                                                    if v300 == v1281 {
                                                        let v491 = &C::any(ctx, v487);
                                                        // Rule at .\isle\mba.isle line 1022.
                                                        return Some(v491.clone());
                                                    }
                                                }
                                            }
                                            _ => {}
                                        }
                                    }
                                    if v300 == v486 {
                                        let v1357 = &C::lookup_value(ctx, v487);
                                        if let Some(v1358) = v1357 {
                                            if let &SimpleAst::Neg {
                                                a: v1359,
                                            } = v1358 {
                                                if v299 == v1359 {
                                                    let v1123 = &C::any(ctx, v486);
                                                    // Rule at .\isle\mba.isle line 971.
                                                    return Some(v1123.clone());
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::Neg {
                                    a: v261,
                                } => {
                                    let v1181 = &C::lookup_value(ctx, v261);
                                    if let Some(v1182) = v1181 {
                                        if let &SimpleAst::And {
                                            a: v1318,
                                            b: v1319,
                                        } = v1182 {
                                            if v486 == v1318 {
                                                if v487 == v1319 {
                                                    let v1320 = C::get_width(ctx, v486);
                                                    let v1321 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v1320);
                                                    // Rule at .\isle\mba.isle line 950.
                                                    return Some(v1321.clone());
                                                }
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                    }
                    &SimpleAst::Or {
                        a: v297,
                        b: v298,
                    } => {
                        let v51 = &C::lookup_value(ctx, v50);
                        if let Some(v52) = v51 {
                            if let &SimpleAst::Mul {
                                a: v249,
                                b: v250,
                            } = v52 {
                                let v251 = &C::lookup_value(ctx, v249);
                                if let Some(v252) = v251 {
                                    if let &SimpleAst::Constant {
                                        c: v253,
                                        width: v254,
                                    } = v252 {
                                        let v397 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFF, v254);
                                        if let Some(v398) = v397 {
                                            if v250 == v297 {
                                                let v301 = &C::any(ctx, v297);
                                                let v302 = C::lookup_id(ctx, v301);
                                                let v1265 = &C::neg(ctx, v302);
                                                let v1266 = C::lookup_id(ctx, v1265);
                                                let v1267 = &C::any(ctx, v298);
                                                let v1268 = C::lookup_id(ctx, v1267);
                                                let v1269 = &C::and(ctx, v1266, v1268);
                                                // Rule at .\isle\mba.isle line 913.
                                                return Some(v1269.clone());
                                            }
                                            let v285 = &C::lookup_value(ctx, v250);
                                            if let Some(v286) = v285 {
                                                if let &SimpleAst::And {
                                                    a: v287,
                                                    b: v288,
                                                } = v286 {
                                                    if v287 == v298 {
                                                        let v1235 = &C::lookup_value(ctx, v288);
                                                        if let Some(v1236) = v1235 {
                                                            if let &SimpleAst::Neg {
                                                                a: v1237,
                                                            } = v1236 {
                                                                if v297 == v1237 {
                                                                    let v301 = &C::any(ctx, v297);
                                                                    // Rule at .\isle\mba.isle line 884.
                                                                    return Some(v301.clone());
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::Xor {
                        a: v334,
                        b: v335,
                    } => {
                        let v51 = &C::lookup_value(ctx, v50);
                        if let Some(v52) = v51 {
                            match v52 {
                                &SimpleAst::Mul {
                                    a: v249,
                                    b: v250,
                                } => {
                                    let v251 = &C::lookup_value(ctx, v249);
                                    if let Some(v252) = v251 {
                                        if let &SimpleAst::Constant {
                                            c: v253,
                                            width: v254,
                                        } = v252 {
                                            let v285 = &C::lookup_value(ctx, v250);
                                            if let Some(v286) = v285 {
                                                if let &SimpleAst::Or {
                                                    a: v530,
                                                    b: v531,
                                                } = v286 {
                                                    if v334 == v530 {
                                                        if v335 == v531 {
                                                            let v397 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFF, v254);
                                                            if let Some(v398) = v397 {
                                                                let v1258 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v254);
                                                                let v1259 = C::lookup_id(ctx, v1258);
                                                                let v1260 = &C::any(ctx, v334);
                                                                let v1261 = C::lookup_id(ctx, v1260);
                                                                let v525 = &C::any(ctx, v335);
                                                                let v526 = C::lookup_id(ctx, v525);
                                                                let v1262 = &C::and(ctx, v1261, v526);
                                                                let v1263 = C::lookup_id(ctx, v1262);
                                                                let v1264 = &C::mul(ctx, v1259, v1263);
                                                                // Rule at .\isle\mba.isle line 906.
                                                                return Some(v1264.clone());
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::Or {
                                    a: v492,
                                    b: v493,
                                } => {
                                    let v494 = &C::lookup_value(ctx, v492);
                                    if let Some(v495) = v494 {
                                        if let &SimpleAst::Xor {
                                            a: v1588,
                                            b: v1589,
                                        } = v495 {
                                            let v1469 = &C::lookup_value(ctx, v335);
                                            if let Some(v1470) = v1469 {
                                                if let &SimpleAst::Or {
                                                    a: v1579,
                                                    b: v1580,
                                                } = v1470 {
                                                    let v1581 = &C::lookup_value(ctx, v1580);
                                                    if let Some(v1582) = v1581 {
                                                        if let &SimpleAst::And {
                                                            a: v1583,
                                                            b: v1584,
                                                        } = v1582 {
                                                            if v334 == v1583 {
                                                                let v1585 = &C::lookup_value(ctx, v1584);
                                                                if let Some(v1586) = v1585 {
                                                                    if let &SimpleAst::Neg {
                                                                        a: v1587,
                                                                    } = v1586 {
                                                                        if v1587 == v1588 {
                                                                            let v1590 = &C::lookup_value(ctx, v1589);
                                                                            if let Some(v1591) = v1590 {
                                                                                if let &SimpleAst::Xor {
                                                                                    a: v1592,
                                                                                    b: v1593,
                                                                                } = v1591 {
                                                                                    if v334 == v1593 {
                                                                                        if v1579 == v1592 {
                                                                                            let v1594 = &C::lookup_value(ctx, v493);
                                                                                            if let Some(v1595) = v1594 {
                                                                                                if let &SimpleAst::And {
                                                                                                    a: v1596,
                                                                                                    b: v1597,
                                                                                                } = v1595 {
                                                                                                    if v334 == v1597 {
                                                                                                        if v1579 == v1596 {
                                                                                                            let v1598 = &C::any(ctx, v1579);
                                                                                                            let v1599 = C::lookup_id(ctx, v1598);
                                                                                                            let v1600 = &C::any(ctx, v1579);
                                                                                                            let v1601 = C::lookup_id(ctx, v1600);
                                                                                                            let v538 = &C::any(ctx, v334);
                                                                                                            let v539 = C::lookup_id(ctx, v538);
                                                                                                            let v1602 = &C::any(ctx, v1587);
                                                                                                            let v1603 = C::lookup_id(ctx, v1602);
                                                                                                            let v1604 = &C::or(ctx, v539, v1603);
                                                                                                            let v1605 = C::lookup_id(ctx, v1604);
                                                                                                            let v1606 = &C::xor(ctx, v1601, v1605);
                                                                                                            let v1607 = C::lookup_id(ctx, v1606);
                                                                                                            let v1608 = &C::add(ctx, v1599, v1607);
                                                                                                            // Rule at .\isle\mba.isle line 1058.
                                                                                                            return Some(v1608.clone());
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::Xor {
                                    a: v329,
                                    b: v330,
                                } => {
                                    let v1469 = &C::lookup_value(ctx, v335);
                                    if let Some(v1470) = v1469 {
                                        if let &SimpleAst::Xor {
                                            a: v1471,
                                            b: v1472,
                                        } = v1470 {
                                            if v329 == v1472 {
                                                let v1473 = &C::lookup_value(ctx, v330);
                                                if let Some(v1474) = v1473 {
                                                    if let &SimpleAst::And {
                                                        a: v1475,
                                                        b: v1476,
                                                    } = v1474 {
                                                        if v334 == v1475 {
                                                            if v1471 == v1476 {
                                                                let v1477 = &C::any(ctx, v1472);
                                                                let v1478 = C::lookup_id(ctx, v1477);
                                                                let v1479 = &C::any(ctx, v1472);
                                                                let v1480 = C::lookup_id(ctx, v1479);
                                                                let v1481 = &C::any(ctx, v1471);
                                                                let v1482 = C::lookup_id(ctx, v1481);
                                                                let v1483 = &C::any(ctx, v334);
                                                                let v1484 = C::lookup_id(ctx, v1483);
                                                                let v1485 = &C::or(ctx, v1482, v1484);
                                                                let v1486 = C::lookup_id(ctx, v1485);
                                                                let v1487 = &C::xor(ctx, v1480, v1486);
                                                                let v1488 = C::lookup_id(ctx, v1487);
                                                                let v1489 = &C::add(ctx, v1478, v1488);
                                                                // Rule at .\isle\mba.isle line 1010.
                                                                return Some(v1489.clone());
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                    }
                    _ => {}
                }
            }
            let v51 = &C::lookup_value(ctx, v50);
            if let Some(v52) = v51 {
                match v52 {
                    &SimpleAst::Mul {
                        a: v249,
                        b: v250,
                    } => {
                        let v285 = &C::lookup_value(ctx, v250);
                        if let Some(v286) = v285 {
                            match v286 {
                                &SimpleAst::Mul {
                                    a: v508,
                                    b: v509,
                                } => {
                                    if let Some(v61) = v60 {
                                        match v61 {
                                            &SimpleAst::Add {
                                                a: v62,
                                                b: v63,
                                            } => {
                                                let v64 = &C::lookup_value(ctx, v62);
                                                if let Some(v65) = v64 {
                                                    if let &SimpleAst::Mul {
                                                        a: v1108,
                                                        b: v1109,
                                                    } = v65 {
                                                        let v251 = &C::lookup_value(ctx, v249);
                                                        if let Some(v252) = v251 {
                                                            if let &SimpleAst::Constant {
                                                                c: v253,
                                                                width: v254,
                                                            } = v252 {
                                                                let v397 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFF, v254);
                                                                if let Some(v398) = v397 {
                                                                    let v514 = &C::lookup_value(ctx, v509);
                                                                    if let Some(v515) = v514 {
                                                                        match v515 {
                                                                            &SimpleAst::And {
                                                                                a: v516,
                                                                                b: v517,
                                                                            } => {
                                                                                if v516 == v1109 {
                                                                                    let v1110 = &C::lookup_value(ctx, v63);
                                                                                    if let Some(v1111) = v1110 {
                                                                                        if let &SimpleAst::Mul {
                                                                                            a: v1112,
                                                                                            b: v1113,
                                                                                        } = v1111 {
                                                                                            if v517 == v1113 {
                                                                                                if v1108 == v1112 {
                                                                                                    let v510 = &C::lookup_value(ctx, v508);
                                                                                                    if let Some(v511) = v510 {
                                                                                                        if let &SimpleAst::Mul {
                                                                                                            a: v1151,
                                                                                                            b: v1152,
                                                                                                        } = v511 {
                                                                                                            if v1108 == v1152 {
                                                                                                                let v1153 = &C::lookup_value(ctx, v1151);
                                                                                                                if let Some(v1154) = v1153 {
                                                                                                                    if let &SimpleAst::Constant {
                                                                                                                        c: v1155,
                                                                                                                        width: v1156,
                                                                                                                    } = v1154 {
                                                                                                                        let v1157 = C::is_constant_modulo(ctx, v1155, 0x2, v254);
                                                                                                                        if let Some(v1158) = v1157 {
                                                                                                                            let v1114 = &C::any(ctx, v1108);
                                                                                                                            let v1115 = C::lookup_id(ctx, v1114);
                                                                                                                            let v1116 = &C::any(ctx, v1109);
                                                                                                                            let v1117 = C::lookup_id(ctx, v1116);
                                                                                                                            let v1118 = &C::any(ctx, v1113);
                                                                                                                            let v1119 = C::lookup_id(ctx, v1118);
                                                                                                                            let v1159 = &C::xor(ctx, v1117, v1119);
                                                                                                                            let v1160 = C::lookup_id(ctx, v1159);
                                                                                                                            let v1161 = &C::mul(ctx, v1115, v1160);
                                                                                                                            // Rule at .\isle\mba.isle line 802.
                                                                                                                            return Some(v1161.clone());
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    if v508 == v1108 {
                                                                                                        let v1114 = &C::any(ctx, v1108);
                                                                                                        let v1115 = C::lookup_id(ctx, v1114);
                                                                                                        let v1116 = &C::any(ctx, v1109);
                                                                                                        let v1117 = C::lookup_id(ctx, v1116);
                                                                                                        let v1118 = &C::any(ctx, v1113);
                                                                                                        let v1119 = C::lookup_id(ctx, v1118);
                                                                                                        let v1120 = &C::or(ctx, v1117, v1119);
                                                                                                        let v1121 = C::lookup_id(ctx, v1120);
                                                                                                        let v1122 = &C::mul(ctx, v1115, v1121);
                                                                                                        // Rule at .\isle\mba.isle line 771.
                                                                                                        return Some(v1122.clone());
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                            &SimpleAst::Or {
                                                                                a: v1188,
                                                                                b: v1189,
                                                                            } => {
                                                                                if v508 == v1108 {
                                                                                    if v1109 == v1188 {
                                                                                        let v1110 = &C::lookup_value(ctx, v63);
                                                                                        if let Some(v1111) = v1110 {
                                                                                            if let &SimpleAst::Mul {
                                                                                                a: v1112,
                                                                                                b: v1113,
                                                                                            } = v1111 {
                                                                                                if v508 == v1112 {
                                                                                                    if v1113 == v1189 {
                                                                                                        let v1114 = &C::any(ctx, v1108);
                                                                                                        let v1115 = C::lookup_id(ctx, v1114);
                                                                                                        let v1116 = &C::any(ctx, v1109);
                                                                                                        let v1117 = C::lookup_id(ctx, v1116);
                                                                                                        let v1118 = &C::any(ctx, v1113);
                                                                                                        let v1119 = C::lookup_id(ctx, v1118);
                                                                                                        let v1190 = &C::and(ctx, v1117, v1119);
                                                                                                        let v1191 = C::lookup_id(ctx, v1190);
                                                                                                        let v1192 = &C::mul(ctx, v1115, v1191);
                                                                                                        // Rule at .\isle\mba.isle line 836.
                                                                                                        return Some(v1192.clone());
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                            _ => {}
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            &SimpleAst::Mul {
                                                a: v270,
                                                b: v271,
                                            } => {
                                                let v251 = &C::lookup_value(ctx, v249);
                                                if let Some(v252) = v251 {
                                                    if let &SimpleAst::Constant {
                                                        c: v253,
                                                        width: v254,
                                                    } = v252 {
                                                        let v397 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFF, v254);
                                                        if let Some(v398) = v397 {
                                                            let v514 = &C::lookup_value(ctx, v509);
                                                            if let Some(v515) = v514 {
                                                                if let &SimpleAst::And {
                                                                    a: v516,
                                                                    b: v517,
                                                                } = v515 {
                                                                    let v276 = &C::lookup_value(ctx, v271);
                                                                    if let Some(v277) = v276 {
                                                                        if let &SimpleAst::And {
                                                                            a: v308,
                                                                            b: v309,
                                                                        } = v277 {
                                                                            if v308 == v516 {
                                                                                if v309 == v517 {
                                                                                    let v1195 = &C::any(ctx, v270);
                                                                                    let v1196 = C::lookup_id(ctx, v1195);
                                                                                    let v523 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v254);
                                                                                    let v524 = C::lookup_id(ctx, v523);
                                                                                    let v1206 = &C::any(ctx, v508);
                                                                                    let v1207 = C::lookup_id(ctx, v1206);
                                                                                    let v1208 = &C::mul(ctx, v524, v1207);
                                                                                    let v1209 = C::lookup_id(ctx, v1208);
                                                                                    let v1210 = &C::add(ctx, v1196, v1209);
                                                                                    let v1211 = C::lookup_id(ctx, v1210);
                                                                                    let v1212 = &C::any(ctx, v308);
                                                                                    let v1213 = C::lookup_id(ctx, v1212);
                                                                                    let v1214 = &C::any(ctx, v309);
                                                                                    let v1215 = C::lookup_id(ctx, v1214);
                                                                                    let v1216 = &C::and(ctx, v1213, v1215);
                                                                                    let v1217 = C::lookup_id(ctx, v1216);
                                                                                    let v1218 = &C::mul(ctx, v1211, v1217);
                                                                                    // Rule at .\isle\mba.isle line 863.
                                                                                    return Some(v1218.clone());
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                    if v270 == v508 {
                                                                        if v271 == v516 {
                                                                            let v1195 = &C::any(ctx, v270);
                                                                            let v1196 = C::lookup_id(ctx, v1195);
                                                                            let v1197 = &C::any(ctx, v271);
                                                                            let v1198 = C::lookup_id(ctx, v1197);
                                                                            let v1199 = &C::any(ctx, v517);
                                                                            let v1200 = C::lookup_id(ctx, v1199);
                                                                            let v1201 = &C::neg(ctx, v1200);
                                                                            let v1202 = C::lookup_id(ctx, v1201);
                                                                            let v1203 = &C::and(ctx, v1198, v1202);
                                                                            let v1204 = C::lookup_id(ctx, v1203);
                                                                            let v1205 = &C::mul(ctx, v1196, v1204);
                                                                            // Rule at .\isle\mba.isle line 856.
                                                                            return Some(v1205.clone());
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            _ => {}
                                        }
                                    }
                                }
                                &SimpleAst::And {
                                    a: v287,
                                    b: v288,
                                } => {
                                    let v251 = &C::lookup_value(ctx, v249);
                                    if let Some(v252) = v251 {
                                        if let &SimpleAst::Constant {
                                            c: v253,
                                            width: v254,
                                        } = v252 {
                                            let v397 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFF, v254);
                                            if let Some(v398) = v397 {
                                                if v49 == v287 {
                                                    let v1219 = &C::any(ctx, v288);
                                                    let v1220 = C::lookup_id(ctx, v1219);
                                                    let v1221 = &C::neg(ctx, v1220);
                                                    let v1222 = C::lookup_id(ctx, v1221);
                                                    let v1223 = &C::any(ctx, v49);
                                                    let v1224 = C::lookup_id(ctx, v1223);
                                                    let v1225 = &C::and(ctx, v1222, v1224);
                                                    // Rule at .\isle\mba.isle line 870.
                                                    return Some(v1225.clone());
                                                }
                                                if let Some(v61) = v60 {
                                                    if let &SimpleAst::Or {
                                                        a: v297,
                                                        b: v298,
                                                    } = v61 {
                                                        if v287 == v297 {
                                                            if v288 == v298 {
                                                                let v301 = &C::any(ctx, v297);
                                                                let v302 = C::lookup_id(ctx, v301);
                                                                let v303 = &C::any(ctx, v298);
                                                                let v304 = C::lookup_id(ctx, v303);
                                                                let v1167 = &C::xor(ctx, v302, v304);
                                                                // Rule at .\isle\mba.isle line 817.
                                                                return Some(v1167.clone());
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            if let Some(v61) = v60 {
                                                if let &SimpleAst::Add {
                                                    a: v62,
                                                    b: v63,
                                                } = v61 {
                                                    if v62 == v287 {
                                                        if v63 == v288 {
                                                            let v1162 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFE, v254);
                                                            if let Some(v1163) = v1162 {
                                                                let v1164 = &C::any(ctx, v62);
                                                                let v1165 = C::lookup_id(ctx, v1164);
                                                                let v70 = &C::any(ctx, v63);
                                                                let v71 = C::lookup_id(ctx, v70);
                                                                let v1166 = &C::xor(ctx, v1165, v71);
                                                                // Rule at .\isle\mba.isle line 810.
                                                                return Some(v1166.clone());
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::Xor {
                                    a: v313,
                                    b: v314,
                                } => {
                                    if let Some(v61) = v60 {
                                        if let &SimpleAst::Or {
                                            a: v297,
                                            b: v298,
                                        } = v61 {
                                            if v297 == v313 {
                                                if v298 == v314 {
                                                    let v251 = &C::lookup_value(ctx, v249);
                                                    if let Some(v252) = v251 {
                                                        if let &SimpleAst::Constant {
                                                            c: v253,
                                                            width: v254,
                                                        } = v252 {
                                                            let v397 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFF, v254);
                                                            if let Some(v398) = v397 {
                                                                let v301 = &C::any(ctx, v297);
                                                                let v302 = C::lookup_id(ctx, v301);
                                                                let v303 = &C::any(ctx, v298);
                                                                let v304 = C::lookup_id(ctx, v303);
                                                                let v1193 = &C::and(ctx, v302, v304);
                                                                // Rule at .\isle\mba.isle line 843.
                                                                return Some(v1193.clone());
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::Neg {
                                    a: v1107,
                                } => {
                                    if let Some(v61) = v60 {
                                        if let &SimpleAst::Mul {
                                            a: v270,
                                            b: v271,
                                        } = v61 {
                                            if v249 == v270 {
                                                if v249 == v271 {
                                                    if v249 == v1107 {
                                                        let v596 = C::get_width(ctx, v270);
                                                        let v597 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v596);
                                                        let v598 = C::lookup_id(ctx, v597);
                                                        let v599 = &C::any(ctx, v270);
                                                        let v600 = C::lookup_id(ctx, v599);
                                                        let v601 = &C::mul(ctx, v598, v600);
                                                        // Rule at .\isle\mba.isle line 765.
                                                        return Some(v601.clone());
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                        if let Some(v61) = v60 {
                            match v61 {
                                &SimpleAst::Mul {
                                    a: v270,
                                    b: v271,
                                } => {
                                    let v276 = &C::lookup_value(ctx, v271);
                                    if let Some(v277) = v276 {
                                        match v277 {
                                            &SimpleAst::Or {
                                                a: v278,
                                                b: v279,
                                            } => {
                                                if v250 == v278 {
                                                    let v251 = &C::lookup_value(ctx, v249);
                                                    if let Some(v252) = v251 {
                                                        if let &SimpleAst::Constant {
                                                            c: v253,
                                                            width: v254,
                                                        } = v252 {
                                                            let v272 = &C::lookup_value(ctx, v270);
                                                            if let Some(v273) = v272 {
                                                                if let &SimpleAst::Constant {
                                                                    c: v306,
                                                                    width: v307,
                                                                } = v273 {
                                                                    let v316 = C::is_constant_modulo(ctx, v306, 0x2, v307);
                                                                    if let Some(v317) = v316 {
                                                                        let v318 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFF, v307);
                                                                        if let Some(v319) = v318 {
                                                                            let v1057 = &C::any(ctx, v279);
                                                                            let v1058 = C::lookup_id(ctx, v1057);
                                                                            let v1059 = &C::any(ctx, v278);
                                                                            let v1060 = C::lookup_id(ctx, v1059);
                                                                            let v1061 = &C::any(ctx, v279);
                                                                            let v1062 = C::lookup_id(ctx, v1061);
                                                                            let v1063 = &C::xor(ctx, v1060, v1062);
                                                                            let v1064 = C::lookup_id(ctx, v1063);
                                                                            let v1065 = &C::add(ctx, v1058, v1064);
                                                                            // Rule at .\isle\mba.isle line 739.
                                                                            return Some(v1065.clone());
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            &SimpleAst::Neg {
                                                a: v595,
                                            } => {
                                                if v249 == v270 {
                                                    if v250 == v595 {
                                                        let v596 = C::get_width(ctx, v270);
                                                        let v597 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v596);
                                                        let v598 = C::lookup_id(ctx, v597);
                                                        let v599 = &C::any(ctx, v270);
                                                        let v600 = C::lookup_id(ctx, v599);
                                                        let v601 = &C::mul(ctx, v598, v600);
                                                        // Rule at .\isle\mba.isle line 491.
                                                        return Some(v601.clone());
                                                    }
                                                }
                                            }
                                            _ => {}
                                        }
                                    }
                                }
                                &SimpleAst::Or {
                                    a: v297,
                                    b: v298,
                                } => {
                                    if let Some(v286) = v285 {
                                        if let &SimpleAst::And {
                                            a: v287,
                                            b: v288,
                                        } = v286 {
                                            if v288 == v298 {
                                                let v251 = &C::lookup_value(ctx, v249);
                                                if let Some(v252) = v251 {
                                                    if let &SimpleAst::Constant {
                                                        c: v253,
                                                        width: v254,
                                                    } = v252 {
                                                        let v289 = &C::lookup_value(ctx, v287);
                                                        if let Some(v290) = v289 {
                                                            if let &SimpleAst::Neg {
                                                                a: v291,
                                                            } = v290 {
                                                                if v291 == v297 {
                                                                    let v397 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFF, v254);
                                                                    if let Some(v398) = v397 {
                                                                        let v301 = &C::any(ctx, v297);
                                                                        // Rule at .\isle\mba.isle line 439.
                                                                        return Some(v301.clone());
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::Xor {
                                    a: v334,
                                    b: v335,
                                } => {
                                    if let Some(v286) = v285 {
                                        match v286 {
                                            &SimpleAst::Mul {
                                                a: v508,
                                                b: v509,
                                            } => {
                                                let v251 = &C::lookup_value(ctx, v249);
                                                if let Some(v252) = v251 {
                                                    if let &SimpleAst::Constant {
                                                        c: v253,
                                                        width: v254,
                                                    } = v252 {
                                                        let v397 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFF, v254);
                                                        if let Some(v398) = v397 {
                                                            let v510 = &C::lookup_value(ctx, v508);
                                                            if let Some(v511) = v510 {
                                                                if let &SimpleAst::Constant {
                                                                    c: v512,
                                                                    width: v513,
                                                                } = v511 {
                                                                    let v514 = &C::lookup_value(ctx, v509);
                                                                    if let Some(v515) = v514 {
                                                                        if let &SimpleAst::And {
                                                                            a: v516,
                                                                            b: v517,
                                                                        } = v515 {
                                                                            if v335 == v517 {
                                                                                let v518 = &C::lookup_value(ctx, v516);
                                                                                if let Some(v519) = v518 {
                                                                                    if let &SimpleAst::Neg {
                                                                                        a: v520,
                                                                                    } = v519 {
                                                                                        if v334 == v520 {
                                                                                            let v521 = C::is_constant_modulo(ctx, v512, 0x2, v254);
                                                                                            if let Some(v522) = v521 {
                                                                                                let v338 = &C::any(ctx, v334);
                                                                                                let v339 = C::lookup_id(ctx, v338);
                                                                                                let v523 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v254);
                                                                                                let v524 = C::lookup_id(ctx, v523);
                                                                                                let v525 = &C::any(ctx, v335);
                                                                                                let v526 = C::lookup_id(ctx, v525);
                                                                                                let v527 = &C::mul(ctx, v524, v526);
                                                                                                let v528 = C::lookup_id(ctx, v527);
                                                                                                let v529 = &C::add(ctx, v339, v528);
                                                                                                // Rule at .\isle\mba.isle line 446.
                                                                                                return Some(v529.clone());
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            &SimpleAst::Or {
                                                a: v530,
                                                b: v531,
                                            } => {
                                                if v335 == v531 {
                                                    let v251 = &C::lookup_value(ctx, v249);
                                                    if let Some(v252) = v251 {
                                                        if let &SimpleAst::Constant {
                                                            c: v253,
                                                            width: v254,
                                                        } = v252 {
                                                            let v336 = C::is_constant_modulo(ctx, v253, 0x2, v254);
                                                            if let Some(v337) = v336 {
                                                                let v532 = &C::lookup_value(ctx, v530);
                                                                if let Some(v533) = v532 {
                                                                    if let &SimpleAst::Neg {
                                                                        a: v534,
                                                                    } = v533 {
                                                                        if v334 == v534 {
                                                                            let v536 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFE, v254);
                                                                            let v537 = C::lookup_id(ctx, v536);
                                                                            let v523 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v254);
                                                                            let v524 = C::lookup_id(ctx, v523);
                                                                            let v538 = &C::any(ctx, v334);
                                                                            let v539 = C::lookup_id(ctx, v538);
                                                                            let v540 = &C::mul(ctx, v524, v539);
                                                                            let v541 = C::lookup_id(ctx, v540);
                                                                            let v542 = &C::add(ctx, v537, v541);
                                                                            let v543 = C::lookup_id(ctx, v542);
                                                                            let v544 = &C::any(ctx, v335);
                                                                            let v545 = C::lookup_id(ctx, v544);
                                                                            let v546 = &C::add(ctx, v543, v545);
                                                                            // Rule at .\isle\mba.isle line 454.
                                                                            return Some(v546.clone());
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            _ => {}
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                        if v49 == v250 {
                            let v251 = &C::lookup_value(ctx, v249);
                            if let Some(v252) = v251 {
                                if let &SimpleAst::Constant {
                                    c: v253,
                                    width: v254,
                                } = v252 {
                                    let v397 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFF, v254);
                                    if let Some(v398) = v397 {
                                        let v399 = &C::constant(ctx, 0x0, v254);
                                        // Rule at .\isle\mba.isle line 352.
                                        return Some(v399.clone());
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::And {
                        a: v299,
                        b: v300,
                    } => {
                        let v1136 = &C::lookup_value(ctx, v300);
                        if let Some(v1137) = v1136 {
                            if let &SimpleAst::Neg {
                                a: v1138,
                            } = v1137 {
                                if v49 == v1138 {
                                    let v1139 = &C::any(ctx, v49);
                                    let v1140 = C::lookup_id(ctx, v1139);
                                    let v1141 = &C::any(ctx, v299);
                                    let v1142 = C::lookup_id(ctx, v1141);
                                    let v1143 = &C::or(ctx, v1140, v1142);
                                    // Rule at .\isle\mba.isle line 790.
                                    return Some(v1143.clone());
                                }
                            }
                        }
                        if let Some(v61) = v60 {
                            if let &SimpleAst::And {
                                a: v486,
                                b: v487,
                            } = v61 {
                                if v300 == v487 {
                                    let v488 = &C::lookup_value(ctx, v299);
                                    if let Some(v489) = v488 {
                                        if let &SimpleAst::Neg {
                                            a: v490,
                                        } = v489 {
                                            if v486 == v490 {
                                                let v491 = &C::any(ctx, v487);
                                                // Rule at .\isle\mba.isle line 421.
                                                return Some(v491.clone());
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::Or {
                        a: v492,
                        b: v493,
                    } => {
                        if let Some(v61) = v60 {
                            match v61 {
                                &SimpleAst::And {
                                    a: v486,
                                    b: v487,
                                } => {
                                    if v486 == v492 {
                                        if v487 == v493 {
                                            let v1123 = &C::any(ctx, v486);
                                            let v1124 = C::lookup_id(ctx, v1123);
                                            let v1125 = &C::any(ctx, v487);
                                            let v1126 = C::lookup_id(ctx, v1125);
                                            let v1194 = &C::add(ctx, v1124, v1126);
                                            // Rule at .\isle\mba.isle line 850.
                                            return Some(v1194.clone());
                                        }
                                    }
                                }
                                &SimpleAst::Or {
                                    a: v297,
                                    b: v298,
                                } => {
                                    if v298 == v493 {
                                        let v494 = &C::lookup_value(ctx, v492);
                                        if let Some(v495) = v494 {
                                            if let &SimpleAst::Neg {
                                                a: v496,
                                            } = v495 {
                                                if v297 == v496 {
                                                    let v497 = C::get_width(ctx, v297);
                                                    let v498 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v497);
                                                    let v499 = C::lookup_id(ctx, v498);
                                                    let v500 = &C::any(ctx, v298);
                                                    let v501 = C::lookup_id(ctx, v500);
                                                    let v502 = &C::add(ctx, v499, v501);
                                                    // Rule at .\isle\mba.isle line 427.
                                                    return Some(v502.clone());
                                                }
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                    }
                    &SimpleAst::Xor {
                        a: v329,
                        b: v330,
                    } => {
                        if let Some(v61) = v60 {
                            match v61 {
                                &SimpleAst::And {
                                    a: v486,
                                    b: v487,
                                } => {
                                    if v329 == v486 {
                                        if v330 == v487 {
                                            let v1123 = &C::any(ctx, v486);
                                            let v1124 = C::lookup_id(ctx, v1123);
                                            let v1125 = &C::any(ctx, v487);
                                            let v1126 = C::lookup_id(ctx, v1125);
                                            let v1127 = &C::or(ctx, v1124, v1126);
                                            // Rule at .\isle\mba.isle line 778.
                                            return Some(v1127.clone());
                                        }
                                    }
                                }
                                &SimpleAst::Xor {
                                    a: v334,
                                    b: v335,
                                } => {
                                    if v330 == v335 {
                                        let v503 = &C::lookup_value(ctx, v329);
                                        if let Some(v504) = v503 {
                                            if let &SimpleAst::Neg {
                                                a: v505,
                                            } = v504 {
                                                if v334 == v505 {
                                                    let v506 = C::get_width(ctx, v334);
                                                    let v507 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v506);
                                                    // Rule at .\isle\mba.isle line 433.
                                                    return Some(v507.clone());
                                                }
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                    }
                    &SimpleAst::Neg {
                        a: v261,
                    } => {
                        if let Some(v61) = v60 {
                            if let &SimpleAst::And {
                                a: v486,
                                b: v487,
                            } = v61 {
                                let v1181 = &C::lookup_value(ctx, v261);
                                if let Some(v1182) = v1181 {
                                    if let &SimpleAst::Or {
                                        a: v1183,
                                        b: v1184,
                                    } = v1182 {
                                        if v486 == v1183 {
                                            if v487 == v1184 {
                                                let v1123 = &C::any(ctx, v486);
                                                let v1124 = C::lookup_id(ctx, v1123);
                                                let v1125 = &C::any(ctx, v487);
                                                let v1126 = C::lookup_id(ctx, v1125);
                                                let v1185 = &C::xor(ctx, v1124, v1126);
                                                let v1186 = C::lookup_id(ctx, v1185);
                                                let v1187 = &C::neg(ctx, v1186);
                                                // Rule at .\isle\mba.isle line 830.
                                                return Some(v1187.clone());
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        if v49 == v261 {
                            let v388 = C::get_width(ctx, v49);
                            let v594 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v388);
                            // Rule at .\isle\mba.isle line 485.
                            return Some(v594.clone());
                        }
                    }
                    _ => {}
                }
            }
            if let Some(v61) = v60 {
                if let &SimpleAst::Constant {
                    c: v77,
                    width: v78,
                } = v61 {
                    let v394 = C::is_constant_modulo(ctx, v77, 0x0, v78);
                    if let Some(v395) = v394 {
                        let v396 = &C::any(ctx, v50);
                        // Rule at .\isle\mba.isle line 345.
                        return Some(v396.clone());
                    }
                }
            }
            if v49 == v50 {
                let v388 = C::get_width(ctx, v49);
                let v389 = &C::constant(ctx, 0x2, v388);
                let v390 = C::lookup_id(ctx, v389);
                let v391 = &C::any(ctx, v49);
                let v392 = C::lookup_id(ctx, v391);
                let v393 = &C::mul(ctx, v390, v392);
                // Rule at .\isle\mba.isle line 339.
                return Some(v393.clone());
            }
            if let Some(v61) = v60 {
                match v61 {
                    &SimpleAst::Add {
                        a: v62,
                        b: v63,
                    } => {
                        let v64 = &C::lookup_value(ctx, v62);
                        if let Some(v65) = v64 {
                            if let &SimpleAst::Constant {
                                c: v66,
                                width: v67,
                            } = v65 {
                                let v68 = &C::constant(ctx, v66, v67);
                                let v69 = C::lookup_id(ctx, v68);
                                let v70 = &C::any(ctx, v63);
                                let v71 = C::lookup_id(ctx, v70);
                                let v72 = &C::any(ctx, v50);
                                let v73 = C::lookup_id(ctx, v72);
                                let v74 = &C::add(ctx, v71, v73);
                                let v75 = C::lookup_id(ctx, v74);
                                let v76 = &C::add(ctx, v69, v75);
                                // Rule at .\isle\mba.isle line 117.
                                return Some(v76.clone());
                            }
                        }
                    }
                    &SimpleAst::Mul {
                        a: v270,
                        b: v271,
                    } => {
                        if let Some(v52) = v51 {
                            match v52 {
                                &SimpleAst::Mul {
                                    a: v249,
                                    b: v250,
                                } => {
                                    let v251 = &C::lookup_value(ctx, v249);
                                    if let Some(v252) = v251 {
                                        match v252 {
                                            &SimpleAst::And {
                                                a: v280,
                                                b: v281,
                                            } => {
                                                let v272 = &C::lookup_value(ctx, v270);
                                                if let Some(v273) = v272 {
                                                    if let &SimpleAst::And {
                                                        a: v274,
                                                        b: v275,
                                                    } = v273 {
                                                        if v274 == v280 {
                                                            let v276 = &C::lookup_value(ctx, v271);
                                                            if let Some(v277) = v276 {
                                                                if let &SimpleAst::Or {
                                                                    a: v278,
                                                                    b: v279,
                                                                } = v277 {
                                                                    if v274 == v278 {
                                                                        if v275 == v279 {
                                                                            let v282 = &C::lookup_value(ctx, v281);
                                                                            if let Some(v283) = v282 {
                                                                                if let &SimpleAst::Neg {
                                                                                    a: v284,
                                                                                } = v283 {
                                                                                    if v275 == v284 {
                                                                                        let v285 = &C::lookup_value(ctx, v250);
                                                                                        if let Some(v286) = v285 {
                                                                                            if let &SimpleAst::And {
                                                                                                a: v287,
                                                                                                b: v288,
                                                                                            } = v286 {
                                                                                                if v275 == v288 {
                                                                                                    let v289 = &C::lookup_value(ctx, v287);
                                                                                                    if let Some(v290) = v289 {
                                                                                                        if let &SimpleAst::Neg {
                                                                                                            a: v291,
                                                                                                        } = v290 {
                                                                                                            if v274 == v291 {
                                                                                                                let v292 = &C::any(ctx, v274);
                                                                                                                let v293 = C::lookup_id(ctx, v292);
                                                                                                                let v294 = &C::any(ctx, v275);
                                                                                                                let v295 = C::lookup_id(ctx, v294);
                                                                                                                let v296 = &C::mul(ctx, v293, v295);
                                                                                                                // Rule at .\isle\mba.isle line 227.
                                                                                                                return Some(v296.clone());
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            &SimpleAst::Constant {
                                                c: v253,
                                                width: v254,
                                            } => {
                                                let v272 = &C::lookup_value(ctx, v270);
                                                if let Some(v273) = v272 {
                                                    if let &SimpleAst::Constant {
                                                        c: v306,
                                                        width: v307,
                                                    } = v273 {
                                                        let v276 = &C::lookup_value(ctx, v271);
                                                        if let Some(v277) = v276 {
                                                            if let &SimpleAst::And {
                                                                a: v308,
                                                                b: v309,
                                                            } = v277 {
                                                                let v285 = &C::lookup_value(ctx, v250);
                                                                if let Some(v286) = v285 {
                                                                    if let &SimpleAst::Xor {
                                                                        a: v313,
                                                                        b: v314,
                                                                    } = v286 {
                                                                        if v308 == v313 {
                                                                            let v310 = &C::lookup_value(ctx, v309);
                                                                            if let Some(v311) = v310 {
                                                                                if let &SimpleAst::Neg {
                                                                                    a: v312,
                                                                                } = v311 {
                                                                                    if v312 == v314 {
                                                                                        let v316 = C::is_constant_modulo(ctx, v306, 0x2, v307);
                                                                                        if let Some(v317) = v316 {
                                                                                            let v318 = C::is_constant_modulo(ctx, v253, 0xFFFFFFFFFFFFFFFF, v307);
                                                                                            if let Some(v319) = v318 {
                                                                                                let v320 = &C::any(ctx, v308);
                                                                                                let v321 = C::lookup_id(ctx, v320);
                                                                                                let v322 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v307);
                                                                                                let v323 = C::lookup_id(ctx, v322);
                                                                                                let v324 = &C::any(ctx, v312);
                                                                                                let v325 = C::lookup_id(ctx, v324);
                                                                                                let v326 = &C::mul(ctx, v323, v325);
                                                                                                let v327 = C::lookup_id(ctx, v326);
                                                                                                let v328 = &C::add(ctx, v321, v327);
                                                                                                // Rule at .\isle\mba.isle line 239.
                                                                                                return Some(v328.clone());
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            _ => {}
                                        }
                                    }
                                }
                                &SimpleAst::Xor {
                                    a: v329,
                                    b: v330,
                                } => {
                                    let v272 = &C::lookup_value(ctx, v270);
                                    if let Some(v273) = v272 {
                                        if let &SimpleAst::Constant {
                                            c: v306,
                                            width: v307,
                                        } = v273 {
                                            let v276 = &C::lookup_value(ctx, v271);
                                            if let Some(v277) = v276 {
                                                if let &SimpleAst::And {
                                                    a: v308,
                                                    b: v309,
                                                } = v277 {
                                                    if v308 == v329 {
                                                        if v309 == v330 {
                                                            let v316 = C::is_constant_modulo(ctx, v306, 0x2, v307);
                                                            if let Some(v317) = v316 {
                                                                let v320 = &C::any(ctx, v308);
                                                                let v321 = C::lookup_id(ctx, v320);
                                                                let v331 = &C::any(ctx, v309);
                                                                let v332 = C::lookup_id(ctx, v331);
                                                                let v333 = &C::add(ctx, v321, v332);
                                                                // Rule at .\isle\mba.isle line 247.
                                                                return Some(v333.clone());
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                    }
                    &SimpleAst::Or {
                        a: v297,
                        b: v298,
                    } => {
                        if let Some(v52) = v51 {
                            if let &SimpleAst::And {
                                a: v299,
                                b: v300,
                            } = v52 {
                                if v297 == v299 {
                                    if v298 == v300 {
                                        let v301 = &C::any(ctx, v297);
                                        let v302 = C::lookup_id(ctx, v301);
                                        let v303 = &C::any(ctx, v298);
                                        let v304 = C::lookup_id(ctx, v303);
                                        let v305 = &C::add(ctx, v302, v304);
                                        // Rule at .\isle\mba.isle line 233.
                                        return Some(v305.clone());
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::Xor {
                        a: v334,
                        b: v335,
                    } => {
                        if let Some(v52) = v51 {
                            if let &SimpleAst::Mul {
                                a: v249,
                                b: v250,
                            } = v52 {
                                let v251 = &C::lookup_value(ctx, v249);
                                if let Some(v252) = v251 {
                                    if let &SimpleAst::Constant {
                                        c: v253,
                                        width: v254,
                                    } = v252 {
                                        let v285 = &C::lookup_value(ctx, v250);
                                        if let Some(v286) = v285 {
                                            if let &SimpleAst::And {
                                                a: v287,
                                                b: v288,
                                            } = v286 {
                                                if v287 == v334 {
                                                    if v288 == v335 {
                                                        let v336 = C::is_constant_modulo(ctx, v253, 0x2, v254);
                                                        if let Some(v337) = v336 {
                                                            let v338 = &C::any(ctx, v334);
                                                            let v339 = C::lookup_id(ctx, v338);
                                                            let v340 = &C::any(ctx, v335);
                                                            let v341 = C::lookup_id(ctx, v340);
                                                            let v342 = &C::add(ctx, v339, v341);
                                                            // Rule at .\isle\mba.isle line 254.
                                                            return Some(v342.clone());
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::Constant {
                        c: v77,
                        width: v78,
                    } => {
                        if let Some(v52) = v51 {
                            match v52 {
                                &SimpleAst::Add {
                                    a: v79,
                                    b: v80,
                                } => {
                                    let v81 = &C::lookup_value(ctx, v79);
                                    if let Some(v82) = v81 {
                                        if let &SimpleAst::Constant {
                                            c: v83,
                                            width: v84,
                                        } = v82 {
                                            let v85 = &C::constant(ctx, v77, v78);
                                            let v86 = C::lookup_id(ctx, v85);
                                            let v87 = &C::constant(ctx, v83, v78);
                                            let v88 = C::lookup_id(ctx, v87);
                                            let v89 = &C::add(ctx, v86, v88);
                                            let v90 = C::lookup_id(ctx, v89);
                                            let v91 = &C::any(ctx, v80);
                                            let v92 = C::lookup_id(ctx, v91);
                                            let v93 = &C::add(ctx, v90, v92);
                                            // Rule at .\isle\mba.isle line 123.
                                            return Some(v93.clone());
                                        }
                                    }
                                }
                                &SimpleAst::Mul {
                                    a: v249,
                                    b: v250,
                                } => {
                                    let v251 = &C::lookup_value(ctx, v249);
                                    if let Some(v252) = v251 {
                                        if let &SimpleAst::Constant {
                                            c: v253,
                                            width: v254,
                                        } = v252 {
                                            if v77 == v253 {
                                                let v256 = C::is_constant_modulo(ctx, v77, 0xFFFFFFFFFFFFFFFF, v78);
                                                if let Some(v257) = v256 {
                                                    let v258 = &C::any(ctx, v250);
                                                    let v259 = C::lookup_id(ctx, v258);
                                                    let v260 = &C::neg(ctx, v259);
                                                    // Rule at .\isle\mba.isle line 213.
                                                    return Some(v260.clone());
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::Neg {
                                    a: v261,
                                } => {
                                    let v263 = C::is_constant_modulo(ctx, v77, 0x1, v78);
                                    if let Some(v264) = v263 {
                                        let v265 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v78);
                                        let v266 = C::lookup_id(ctx, v265);
                                        let v267 = &C::any(ctx, v261);
                                        let v268 = C::lookup_id(ctx, v267);
                                        let v269 = &C::mul(ctx, v266, v268);
                                        // Rule at .\isle\mba.isle line 220.
                                        return Some(v269.clone());
                                    }
                                }
                                &SimpleAst::Constant {
                                    c: v53,
                                    width: v54,
                                } => {
                                    let v85 = &C::constant(ctx, v77, v78);
                                    let v86 = C::lookup_id(ctx, v85);
                                    let v94 = &C::constant(ctx, v53, v78);
                                    let v95 = C::lookup_id(ctx, v94);
                                    let v96 = &C::add(ctx, v86, v95);
                                    // Rule at .\isle\mba.isle line 129.
                                    return Some(v96.clone());
                                }
                                _ => {}
                            }
                        }
                    }
                    _ => {}
                }
            }
            if let Some(v52) = v51 {
                if let &SimpleAst::Constant {
                    c: v53,
                    width: v54,
                } = v52 {
                    let v55 = &C::constant(ctx, v53, v54);
                    let v56 = C::lookup_id(ctx, v55);
                    let v57 = &C::any(ctx, v49);
                    let v58 = C::lookup_id(ctx, v57);
                    let v59 = &C::add(ctx, v56, v58);
                    // Rule at .\isle\mba.isle line 111.
                    return Some(v59.clone());
                }
            }
        }
        &SimpleAst::Mul {
            a: v1,
            b: v2,
        } => {
            let v12 = &C::lookup_value(ctx, v1);
            if let Some(v13) = v12 {
                match v13 {
                    &SimpleAst::Mul {
                        a: v14,
                        b: v15,
                    } => {
                        let v16 = &C::lookup_value(ctx, v14);
                        if let Some(v17) = v16 {
                            if let &SimpleAst::Constant {
                                c: v18,
                                width: v19,
                            } = v17 {
                                let v20 = &C::constant(ctx, v18, v19);
                                let v21 = C::lookup_id(ctx, v20);
                                let v22 = &C::any(ctx, v15);
                                let v23 = C::lookup_id(ctx, v22);
                                let v24 = &C::any(ctx, v2);
                                let v25 = C::lookup_id(ctx, v24);
                                let v26 = &C::mul(ctx, v23, v25);
                                let v27 = C::lookup_id(ctx, v26);
                                let v28 = &C::mul(ctx, v21, v27);
                                // Rule at .\isle\mba.isle line 93.
                                return Some(v28.clone());
                            }
                        }
                    }
                    &SimpleAst::Pow {
                        a: v581,
                        b: v582,
                    } => {
                        let v3 = &C::lookup_value(ctx, v2);
                        if let Some(v4) = v3 {
                            if let &SimpleAst::Pow {
                                a: v583,
                                b: v584,
                            } = v4 {
                                if v581 == v583 {
                                    let v585 = &C::any(ctx, v581);
                                    let v586 = C::lookup_id(ctx, v585);
                                    let v587 = &C::any(ctx, v582);
                                    let v588 = C::lookup_id(ctx, v587);
                                    let v589 = &C::any(ctx, v584);
                                    let v590 = C::lookup_id(ctx, v589);
                                    let v591 = &C::add(ctx, v588, v590);
                                    let v592 = C::lookup_id(ctx, v591);
                                    let v593 = &C::pow(ctx, v586, v592);
                                    // Rule at .\isle\mba.isle line 479.
                                    return Some(v593.clone());
                                }
                            }
                        }
                    }
                    &SimpleAst::Constant {
                        c: v29,
                        width: v30,
                    } => {
                        let v3 = &C::lookup_value(ctx, v2);
                        if let Some(v4) = v3 {
                            match v4 {
                                &SimpleAst::Mul {
                                    a: v31,
                                    b: v32,
                                } => {
                                    let v33 = &C::lookup_value(ctx, v31);
                                    if let Some(v34) = v33 {
                                        if let &SimpleAst::Constant {
                                            c: v35,
                                            width: v36,
                                        } = v34 {
                                            if v29 == v35 {
                                                let v418 = C::is_constant_modulo(ctx, v29, 0xFFFFFFFFFFFFFFFF, v30);
                                                if let Some(v419) = v418 {
                                                    let v420 = &C::any(ctx, v32);
                                                    // Rule at .\isle\mba.isle line 387.
                                                    return Some(v420.clone());
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::And {
                                    a: v629,
                                    b: v630,
                                } => {
                                    let v631 = &C::lookup_value(ctx, v630);
                                    if let Some(v632) = v631 {
                                        if let &SimpleAst::Mul {
                                            a: v633,
                                            b: v634,
                                        } = v632 {
                                            if v629 == v634 {
                                                let v635 = &C::lookup_value(ctx, v633);
                                                if let Some(v636) = v635 {
                                                    if let &SimpleAst::Constant {
                                                        c: v637,
                                                        width: v638,
                                                    } = v636 {
                                                        let v639 = C::is_constant_modulo(ctx, v29, 0xFFFFFFFFFFFFFFFE, v30);
                                                        if let Some(v640) = v639 {
                                                            let v641 = C::is_constant_modulo(ctx, v637, 0xFFFFFFFFFFFFFFFF, v30);
                                                            if let Some(v642) = v641 {
                                                                let v643 = &C::any(ctx, v629);
                                                                let v644 = C::lookup_id(ctx, v643);
                                                                let v622 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v30);
                                                                let v623 = C::lookup_id(ctx, v622);
                                                                let v645 = &C::any(ctx, v629);
                                                                let v646 = C::lookup_id(ctx, v645);
                                                                let v647 = &C::mul(ctx, v623, v646);
                                                                let v648 = C::lookup_id(ctx, v647);
                                                                let v649 = &C::xor(ctx, v644, v648);
                                                                // Rule at .\isle\mba.isle line 511.
                                                                return Some(v649.clone());
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::Or {
                                    a: v606,
                                    b: v607,
                                } => {
                                    let v608 = &C::lookup_value(ctx, v607);
                                    if let Some(v609) = v608 {
                                        if let &SimpleAst::Mul {
                                            a: v610,
                                            b: v611,
                                        } = v609 {
                                            if v606 == v611 {
                                                let v612 = &C::lookup_value(ctx, v610);
                                                if let Some(v613) = v612 {
                                                    if let &SimpleAst::Constant {
                                                        c: v614,
                                                        width: v615,
                                                    } = v613 {
                                                        let v616 = C::is_constant_modulo(ctx, v29, 0x2, v30);
                                                        if let Some(v617) = v616 {
                                                            let v618 = C::is_constant_modulo(ctx, v614, 0xFFFFFFFFFFFFFFFF, v30);
                                                            if let Some(v619) = v618 {
                                                                let v620 = &C::any(ctx, v606);
                                                                let v621 = C::lookup_id(ctx, v620);
                                                                let v622 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v30);
                                                                let v623 = C::lookup_id(ctx, v622);
                                                                let v624 = &C::any(ctx, v606);
                                                                let v625 = C::lookup_id(ctx, v624);
                                                                let v626 = &C::mul(ctx, v623, v625);
                                                                let v627 = C::lookup_id(ctx, v626);
                                                                let v628 = &C::xor(ctx, v621, v627);
                                                                // Rule at .\isle\mba.isle line 503.
                                                                return Some(v628.clone());
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                        let v403 = C::is_constant_modulo(ctx, v29, 0x1, v30);
                        if let Some(v404) = v403 {
                            let v405 = &C::any(ctx, v2);
                            // Rule at .\isle\mba.isle line 366.
                            return Some(v405.clone());
                        }
                        let v400 = C::is_constant_modulo(ctx, v29, 0x0, v30);
                        if let Some(v401) = v400 {
                            let v402 = &C::constant(ctx, 0x0, v30);
                            // Rule at .\isle\mba.isle line 359.
                            return Some(v402.clone());
                        }
                        if let Some(v4) = v3 {
                            match v4 {
                                &SimpleAst::Mul {
                                    a: v31,
                                    b: v32,
                                } => {
                                    let v33 = &C::lookup_value(ctx, v31);
                                    if let Some(v34) = v33 {
                                        if let &SimpleAst::Constant {
                                            c: v35,
                                            width: v36,
                                        } = v34 {
                                            let v37 = &C::constant(ctx, v29, v30);
                                            let v38 = C::lookup_id(ctx, v37);
                                            let v39 = &C::constant(ctx, v35, v30);
                                            let v40 = C::lookup_id(ctx, v39);
                                            let v41 = &C::mul(ctx, v38, v40);
                                            let v42 = C::lookup_id(ctx, v41);
                                            let v43 = &C::any(ctx, v32);
                                            let v44 = C::lookup_id(ctx, v43);
                                            let v45 = &C::mul(ctx, v42, v44);
                                            // Rule at .\isle\mba.isle line 99.
                                            return Some(v45.clone());
                                        }
                                    }
                                }
                                &SimpleAst::Constant {
                                    c: v5,
                                    width: v6,
                                } => {
                                    let v37 = &C::constant(ctx, v29, v30);
                                    let v38 = C::lookup_id(ctx, v37);
                                    let v46 = &C::constant(ctx, v5, v30);
                                    let v47 = C::lookup_id(ctx, v46);
                                    let v48 = &C::mul(ctx, v38, v47);
                                    // Rule at .\isle\mba.isle line 105.
                                    return Some(v48.clone());
                                }
                                _ => {}
                            }
                        }
                    }
                    _ => {}
                }
            }
            let v3 = &C::lookup_value(ctx, v2);
            if let Some(v4) = v3 {
                if let &SimpleAst::Constant {
                    c: v5,
                    width: v6,
                } = v4 {
                    let v7 = &C::constant(ctx, v5, v6);
                    let v8 = C::lookup_id(ctx, v7);
                    let v9 = &C::any(ctx, v1);
                    let v10 = C::lookup_id(ctx, v9);
                    let v11 = &C::mul(ctx, v8, v10);
                    // Rule at .\isle\mba.isle line 87.
                    return Some(v11.clone());
                }
            }
        }
        &SimpleAst::Pow {
            a: v406,
            b: v407,
        } => {
            let v408 = &C::lookup_value(ctx, v407);
            if let Some(v409) = v408 {
                if let &SimpleAst::Constant {
                    c: v410,
                    width: v411,
                } = v409 {
                    let v415 = C::is_constant_modulo(ctx, v410, 0x1, v411);
                    if let Some(v416) = v415 {
                        let v417 = &C::any(ctx, v406);
                        // Rule at .\isle\mba.isle line 380.
                        return Some(v417.clone());
                    }
                    let v412 = C::is_constant_modulo(ctx, v410, 0x0, v411);
                    if let Some(v413) = v412 {
                        let v414 = &C::constant(ctx, 0x1, v411);
                        // Rule at .\isle\mba.isle line 373.
                        return Some(v414.clone());
                    }
                }
            }
        }
        &SimpleAst::And {
            a: v97,
            b: v98,
        } => {
            let v99 = &C::lookup_value(ctx, v98);
            if let Some(v100) = v99 {
                match v100 {
                    &SimpleAst::Or {
                        a: v814,
                        b: v815,
                    } => {
                        let v819 = &C::lookup_value(ctx, v815);
                        if let Some(v820) = v819 {
                            if let &SimpleAst::Xor {
                                a: v1490,
                                b: v1491,
                            } = v820 {
                                if v97 == v1490 {
                                    let v384 = &C::any(ctx, v97);
                                    let v1032 = C::lookup_id(ctx, v384);
                                    let v1492 = &C::any(ctx, v1491);
                                    let v1493 = C::lookup_id(ctx, v1492);
                                    let v1494 = &C::neg(ctx, v1493);
                                    let v1495 = C::lookup_id(ctx, v1494);
                                    let v1496 = &C::any(ctx, v814);
                                    let v1497 = C::lookup_id(ctx, v1496);
                                    let v1498 = &C::or(ctx, v1495, v1497);
                                    let v1499 = C::lookup_id(ctx, v1498);
                                    let v1500 = &C::and(ctx, v1032, v1499);
                                    // Rule at .\isle\mba.isle line 1016.
                                    return Some(v1500.clone());
                                }
                            }
                        }
                    }
                    &SimpleAst::Xor {
                        a: v753,
                        b: v754,
                    } => {
                        let v108 = &C::lookup_value(ctx, v97);
                        if let Some(v109) = v108 {
                            match v109 {
                                &SimpleAst::And {
                                    a: v110,
                                    b: v111,
                                } => {
                                    if v111 == v753 {
                                        let v1549 = &C::any(ctx, v111);
                                        let v1550 = C::lookup_id(ctx, v1549);
                                        let v1551 = &C::any(ctx, v110);
                                        let v1552 = C::lookup_id(ctx, v1551);
                                        let v1553 = &C::and(ctx, v1550, v1552);
                                        let v1554 = C::lookup_id(ctx, v1553);
                                        let v1555 = &C::any(ctx, v754);
                                        let v1556 = C::lookup_id(ctx, v1555);
                                        let v1557 = &C::neg(ctx, v1556);
                                        let v1558 = C::lookup_id(ctx, v1557);
                                        let v1559 = &C::and(ctx, v1554, v1558);
                                        // Rule at .\isle\mba.isle line 1046.
                                        return Some(v1559.clone());
                                    }
                                }
                                &SimpleAst::Xor {
                                    a: v1270,
                                    b: v1271,
                                } => {
                                    let v755 = &C::lookup_value(ctx, v754);
                                    if let Some(v756) = v755 {
                                        if let &SimpleAst::Xor {
                                            a: v1360,
                                            b: v1361,
                                        } = v756 {
                                            if v1270 == v1360 {
                                                let v1362 = &C::lookup_value(ctx, v1361);
                                                if let Some(v1363) = v1362 {
                                                    if let &SimpleAst::Neg {
                                                        a: v1364,
                                                    } = v1363 {
                                                        if v1271 == v1364 {
                                                            let v1365 = &C::any(ctx, v753);
                                                            let v1366 = C::lookup_id(ctx, v1365);
                                                            let v1367 = &C::any(ctx, v1270);
                                                            let v1368 = C::lookup_id(ctx, v1367);
                                                            let v1369 = &C::any(ctx, v1271);
                                                            let v1370 = C::lookup_id(ctx, v1369);
                                                            let v1371 = &C::xor(ctx, v1368, v1370);
                                                            let v1372 = C::lookup_id(ctx, v1371);
                                                            let v1373 = &C::and(ctx, v1366, v1372);
                                                            // Rule at .\isle\mba.isle line 977.
                                                            return Some(v1373.clone());
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::Neg {
                                    a: v669,
                                } => {
                                    let v670 = &C::lookup_value(ctx, v669);
                                    if let Some(v671) = v670 {
                                        if let &SimpleAst::And {
                                            a: v1168,
                                            b: v1169,
                                        } = v671 {
                                            if v753 == v1169 {
                                                let v755 = &C::lookup_value(ctx, v754);
                                                if let Some(v756) = v755 {
                                                    if let &SimpleAst::Xor {
                                                        a: v1360,
                                                        b: v1361,
                                                    } = v756 {
                                                        let v1362 = &C::lookup_value(ctx, v1361);
                                                        if let Some(v1363) = v1362 {
                                                            if let &SimpleAst::Neg {
                                                                a: v1364,
                                                            } = v1363 {
                                                                if v1168 == v1364 {
                                                                    let v1560 = &C::any(ctx, v1169);
                                                                    let v1561 = C::lookup_id(ctx, v1560);
                                                                    let v1562 = &C::any(ctx, v1168);
                                                                    let v1563 = C::lookup_id(ctx, v1562);
                                                                    let v1564 = &C::and(ctx, v1561, v1563);
                                                                    let v1565 = C::lookup_id(ctx, v1564);
                                                                    let v1566 = &C::any(ctx, v1169);
                                                                    let v1567 = C::lookup_id(ctx, v1566);
                                                                    let v1568 = &C::any(ctx, v1168);
                                                                    let v1569 = C::lookup_id(ctx, v1568);
                                                                    let v1570 = &C::xor(ctx, v1567, v1569);
                                                                    let v1571 = C::lookup_id(ctx, v1570);
                                                                    let v1572 = &C::any(ctx, v1360);
                                                                    let v1573 = C::lookup_id(ctx, v1572);
                                                                    let v1574 = &C::xor(ctx, v1571, v1573);
                                                                    let v1575 = C::lookup_id(ctx, v1574);
                                                                    let v1576 = &C::or(ctx, v1565, v1575);
                                                                    let v1577 = C::lookup_id(ctx, v1576);
                                                                    let v1578 = &C::neg(ctx, v1577);
                                                                    // Rule at .\isle\mba.isle line 1052.
                                                                    return Some(v1578.clone());
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::Constant {
                                    c: v125,
                                    width: v126,
                                } => {
                                    let v755 = &C::lookup_value(ctx, v754);
                                    if let Some(v756) = v755 {
                                        if let &SimpleAst::Add {
                                            a: v1298,
                                            b: v1299,
                                        } = v756 {
                                            if v753 == v1299 {
                                                let v1300 = &C::lookup_value(ctx, v1298);
                                                if let Some(v1301) = v1300 {
                                                    if let &SimpleAst::Mul {
                                                        a: v1302,
                                                        b: v1303,
                                                    } = v1301 {
                                                        let v1304 = &C::lookup_value(ctx, v1302);
                                                        if let Some(v1305) = v1304 {
                                                            if let &SimpleAst::Constant {
                                                                c: v1306,
                                                                width: v1307,
                                                            } = v1305 {
                                                                let v1308 = &C::lookup_value(ctx, v1303);
                                                                if let Some(v1309) = v1308 {
                                                                    if let &SimpleAst::Constant {
                                                                        c: v1310,
                                                                        width: v1311,
                                                                    } = v1309 {
                                                                        let v1312 = C::is_constant_modulo(ctx, v125, 0x1, v126);
                                                                        if let Some(v1313) = v1312 {
                                                                            let v1314 = C::is_constant_modulo(ctx, v1306, 0xFFFFFFFFFFFFFFFF, v126);
                                                                            if let Some(v1315) = v1314 {
                                                                                let v1316 = C::is_constant_modulo(ctx, v1310, 0x2, v126);
                                                                                if let Some(v1317) = v1316 {
                                                                                    let v380 = &C::constant(ctx, 0x0, v126);
                                                                                    // Rule at .\isle\mba.isle line 941.
                                                                                    return Some(v380.clone());
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                    }
                    _ => {}
                }
            }
            let v108 = &C::lookup_value(ctx, v97);
            if let Some(v109) = v108 {
                match v109 {
                    &SimpleAst::Xor {
                        a: v1270,
                        b: v1271,
                    } => {
                        if v98 == v1270 {
                            let v1272 = &C::any(ctx, v1270);
                            let v1273 = C::lookup_id(ctx, v1272);
                            let v1274 = &C::any(ctx, v1271);
                            let v1275 = C::lookup_id(ctx, v1274);
                            let v1276 = &C::neg(ctx, v1275);
                            let v1277 = C::lookup_id(ctx, v1276);
                            let v1278 = &C::and(ctx, v1273, v1277);
                            // Rule at .\isle\mba.isle line 920.
                            return Some(v1278.clone());
                        }
                    }
                    &SimpleAst::Neg {
                        a: v669,
                    } => {
                        if let Some(v100) = v99 {
                            if let &SimpleAst::Neg {
                                a: v385,
                            } = v100 {
                                let v602 = &C::lookup_value(ctx, v385);
                                if let Some(v603) = v602 {
                                    if let &SimpleAst::And {
                                        a: v795,
                                        b: v796,
                                    } = v603 {
                                        let v670 = &C::lookup_value(ctx, v669);
                                        if let Some(v671) = v670 {
                                            if let &SimpleAst::And {
                                                a: v1168,
                                                b: v1169,
                                            } = v671 {
                                                let v1170 = &C::lookup_value(ctx, v1168);
                                                if let Some(v1171) = v1170 {
                                                    if let &SimpleAst::Neg {
                                                        a: v1172,
                                                    } = v1171 {
                                                        if v795 == v1172 {
                                                            let v1173 = &C::lookup_value(ctx, v1169);
                                                            if let Some(v1174) = v1173 {
                                                                if let &SimpleAst::Neg {
                                                                    a: v1175,
                                                                } = v1174 {
                                                                    if v796 == v1175 {
                                                                        let v1176 = &C::any(ctx, v1175);
                                                                        let v1177 = C::lookup_id(ctx, v1176);
                                                                        let v1178 = &C::any(ctx, v1172);
                                                                        let v1179 = C::lookup_id(ctx, v1178);
                                                                        let v1180 = &C::xor(ctx, v1177, v1179);
                                                                        // Rule at .\isle\mba.isle line 824.
                                                                        return Some(v1180.clone());
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    _ => {}
                }
            }
            if let Some(v100) = v99 {
                match v100 {
                    &SimpleAst::Add {
                        a: v1007,
                        b: v1008,
                    } => {
                        if v97 == v1007 {
                            let v1009 = &C::lookup_value(ctx, v1008);
                            if let Some(v1010) = v1009 {
                                if let &SimpleAst::And {
                                    a: v1011,
                                    b: v1012,
                                } = v1010 {
                                    let v1013 = &C::lookup_value(ctx, v1011);
                                    if let Some(v1014) = v1013 {
                                        if let &SimpleAst::Neg {
                                            a: v1015,
                                        } = v1014 {
                                            if v97 == v1015 {
                                                let v384 = &C::any(ctx, v97);
                                                // Rule at .\isle\mba.isle line 712.
                                                return Some(v384.clone());
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::Mul {
                        a: v678,
                        b: v679,
                    } => {
                        let v680 = &C::lookup_value(ctx, v678);
                        if let Some(v681) = v680 {
                            if let &SimpleAst::Constant {
                                c: v682,
                                width: v683,
                            } = v681 {
                                let v684 = &C::lookup_value(ctx, v679);
                                if let Some(v685) = v684 {
                                    match v685 {
                                        &SimpleAst::And {
                                            a: v846,
                                            b: v847,
                                        } => {
                                            let v848 = &C::lookup_value(ctx, v847);
                                            if let Some(v849) = v848 {
                                                match v849 {
                                                    &SimpleAst::Mul {
                                                        a: v850,
                                                        b: v851,
                                                    } => {
                                                        if v97 == v846 {
                                                            if v97 == v851 {
                                                                let v852 = &C::lookup_value(ctx, v850);
                                                                if let Some(v853) = v852 {
                                                                    if let &SimpleAst::Constant {
                                                                        c: v854,
                                                                        width: v855,
                                                                    } = v853 {
                                                                        if v682 == v854 {
                                                                            let v856 = C::is_constant_modulo(ctx, v682, 0xFFFFFFFFFFFFFFFF, v683);
                                                                            if let Some(v857) = v856 {
                                                                                let v384 = &C::any(ctx, v97);
                                                                                // Rule at .\isle\mba.isle line 606.
                                                                                return Some(v384.clone());
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    &SimpleAst::Or {
                                                        a: v1030,
                                                        b: v1031,
                                                    } => {
                                                        if v97 == v1030 {
                                                            let v856 = C::is_constant_modulo(ctx, v682, 0xFFFFFFFFFFFFFFFF, v683);
                                                            if let Some(v857) = v856 {
                                                                let v1022 = &C::lookup_value(ctx, v846);
                                                                if let Some(v1023) = v1022 {
                                                                    if let &SimpleAst::Mul {
                                                                        a: v1024,
                                                                        b: v1025,
                                                                    } = v1023 {
                                                                        if v1025 == v1031 {
                                                                            let v1026 = &C::lookup_value(ctx, v1024);
                                                                            if let Some(v1027) = v1026 {
                                                                                if let &SimpleAst::Constant {
                                                                                    c: v1028,
                                                                                    width: v1029,
                                                                                } = v1027 {
                                                                                    if v682 == v1028 {
                                                                                        let v384 = &C::any(ctx, v97);
                                                                                        let v1032 = C::lookup_id(ctx, v384);
                                                                                        let v1033 = &C::any(ctx, v1025);
                                                                                        let v1034 = C::lookup_id(ctx, v1033);
                                                                                        let v1035 = &C::and(ctx, v1032, v1034);
                                                                                        // Rule at .\isle\mba.isle line 725.
                                                                                        return Some(v1035.clone());
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    _ => {}
                                                }
                                            }
                                        }
                                        &SimpleAst::Xor {
                                            a: v686,
                                            b: v687,
                                        } => {
                                            if let Some(v109) = v108 {
                                                if let &SimpleAst::Neg {
                                                    a: v669,
                                                } = v109 {
                                                    let v670 = &C::lookup_value(ctx, v669);
                                                    if let Some(v671) = v670 {
                                                        if let &SimpleAst::Mul {
                                                            a: v672,
                                                            b: v673,
                                                        } = v671 {
                                                            if v673 == v686 {
                                                                let v674 = &C::lookup_value(ctx, v672);
                                                                if let Some(v675) = v674 {
                                                                    if let &SimpleAst::Constant {
                                                                        c: v676,
                                                                        width: v677,
                                                                    } = v675 {
                                                                        let v688 = &C::lookup_value(ctx, v687);
                                                                        if let Some(v689) = v688 {
                                                                            if let &SimpleAst::Mul {
                                                                                a: v690,
                                                                                b: v691,
                                                                            } = v689 {
                                                                                if v673 == v691 {
                                                                                    let v692 = &C::lookup_value(ctx, v690);
                                                                                    if let Some(v693) = v692 {
                                                                                        if let &SimpleAst::Constant {
                                                                                            c: v694,
                                                                                            width: v695,
                                                                                        } = v693 {
                                                                                            if v682 == v694 {
                                                                                                let v696 = C::is_constant_modulo(ctx, v676, 0x2, v677);
                                                                                                if let Some(v697) = v696 {
                                                                                                    let v698 = C::is_constant_modulo(ctx, v682, 0xFFFFFFFFFFFFFFFF, v677);
                                                                                                    if let Some(v699) = v698 {
                                                                                                        let v700 = &C::constant(ctx, 0x0, v677);
                                                                                                        // Rule at .\isle\mba.isle line 527.
                                                                                                        return Some(v700.clone());
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        _ => {}
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::And {
                        a: v127,
                        b: v128,
                    } => {
                        let v129 = &C::lookup_value(ctx, v127);
                        if let Some(v130) = v129 {
                            if let &SimpleAst::Mul {
                                a: v650,
                                b: v651,
                            } = v130 {
                                if v97 == v651 {
                                    let v652 = &C::lookup_value(ctx, v650);
                                    if let Some(v653) = v652 {
                                        if let &SimpleAst::Constant {
                                            c: v654,
                                            width: v655,
                                        } = v653 {
                                            let v656 = &C::lookup_value(ctx, v128);
                                            if let Some(v657) = v656 {
                                                if let &SimpleAst::Mul {
                                                    a: v658,
                                                    b: v659,
                                                } = v657 {
                                                    if v97 == v659 {
                                                        let v660 = &C::lookup_value(ctx, v658);
                                                        if let Some(v661) = v660 {
                                                            if let &SimpleAst::Constant {
                                                                c: v662,
                                                                width: v663,
                                                            } = v661 {
                                                                let v664 = C::is_constant_modulo(ctx, v654, 0xFFFFFFFFFFFFFFFF, v655);
                                                                if let Some(v665) = v664 {
                                                                    let v666 = C::is_constant_modulo(ctx, v662, 0x2, v655);
                                                                    if let Some(v667) = v666 {
                                                                        let v668 = &C::constant(ctx, 0x0, v655);
                                                                        // Rule at .\isle\mba.isle line 519.
                                                                        return Some(v668.clone());
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::Or {
                        a: v814,
                        b: v815,
                    } => {
                        let v816 = &C::lookup_value(ctx, v814);
                        if let Some(v817) = v816 {
                            match v817 {
                                &SimpleAst::Mul {
                                    a: v920,
                                    b: v921,
                                } => {
                                    let v819 = &C::lookup_value(ctx, v815);
                                    if let Some(v820) = v819 {
                                        if let &SimpleAst::Mul {
                                            a: v937,
                                            b: v938,
                                        } = v820 {
                                            let v922 = &C::lookup_value(ctx, v920);
                                            if let Some(v923) = v922 {
                                                if let &SimpleAst::Constant {
                                                    c: v924,
                                                    width: v925,
                                                } = v923 {
                                                    let v926 = &C::lookup_value(ctx, v921);
                                                    if let Some(v927) = v926 {
                                                        if let &SimpleAst::Neg {
                                                            a: v928,
                                                        } = v927 {
                                                            let v929 = &C::lookup_value(ctx, v928);
                                                            if let Some(v930) = v929 {
                                                                if let &SimpleAst::Mul {
                                                                    a: v931,
                                                                    b: v932,
                                                                } = v930 {
                                                                    if v97 == v932 {
                                                                        let v933 = &C::lookup_value(ctx, v931);
                                                                        if let Some(v934) = v933 {
                                                                            if let &SimpleAst::Constant {
                                                                                c: v935,
                                                                                width: v936,
                                                                            } = v934 {
                                                                                let v939 = &C::lookup_value(ctx, v937);
                                                                                if let Some(v940) = v939 {
                                                                                    if let &SimpleAst::Constant {
                                                                                        c: v941,
                                                                                        width: v942,
                                                                                    } = v940 {
                                                                                        if v924 == v941 {
                                                                                            let v943 = &C::lookup_value(ctx, v938);
                                                                                            if let Some(v944) = v943 {
                                                                                                if let &SimpleAst::Neg {
                                                                                                    a: v945,
                                                                                                } = v944 {
                                                                                                    if v97 == v945 {
                                                                                                        let v946 = C::is_constant_modulo(ctx, v924, 0xFFFFFFFFFFFFFFFF, v925);
                                                                                                        if let Some(v947) = v946 {
                                                                                                            let v948 = C::is_constant_modulo(ctx, v935, 0x2, v925);
                                                                                                            if let Some(v949) = v948 {
                                                                                                                let v384 = &C::any(ctx, v97);
                                                                                                                // Rule at .\isle\mba.isle line 661.
                                                                                                                return Some(v384.clone());
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::Neg {
                                    a: v818,
                                } => {
                                    let v819 = &C::lookup_value(ctx, v815);
                                    if let Some(v820) = v819 {
                                        match v820 {
                                            &SimpleAst::Mul {
                                                a: v937,
                                                b: v938,
                                            } => {
                                                let v939 = &C::lookup_value(ctx, v937);
                                                if let Some(v940) = v939 {
                                                    if let &SimpleAst::Constant {
                                                        c: v941,
                                                        width: v942,
                                                    } = v940 {
                                                        let v943 = &C::lookup_value(ctx, v938);
                                                        if let Some(v944) = v943 {
                                                            if let &SimpleAst::Neg {
                                                                a: v945,
                                                            } = v944 {
                                                                if v97 == v945 {
                                                                    let v950 = &C::lookup_value(ctx, v818);
                                                                    if let Some(v951) = v950 {
                                                                        if let &SimpleAst::Mul {
                                                                            a: v952,
                                                                            b: v953,
                                                                        } = v951 {
                                                                            let v954 = &C::lookup_value(ctx, v952);
                                                                            if let Some(v955) = v954 {
                                                                                match v955 {
                                                                                    &SimpleAst::Mul {
                                                                                        a: v965,
                                                                                        b: v966,
                                                                                    } => {
                                                                                        let v958 = &C::lookup_value(ctx, v953);
                                                                                        if let Some(v959) = v958 {
                                                                                            if let &SimpleAst::Neg {
                                                                                                a: v960,
                                                                                            } = v959 {
                                                                                                if v97 == v960 {
                                                                                                    let v967 = &C::lookup_value(ctx, v965);
                                                                                                    if let Some(v968) = v967 {
                                                                                                        if let &SimpleAst::Constant {
                                                                                                            c: v969,
                                                                                                            width: v970,
                                                                                                        } = v968 {
                                                                                                            if v941 == v969 {
                                                                                                                let v971 = C::is_constant_modulo(ctx, v969, 0xFFFFFFFFFFFFFFFF, v970);
                                                                                                                if let Some(v972) = v971 {
                                                                                                                    let v384 = &C::any(ctx, v97);
                                                                                                                    // Rule at .\isle\mba.isle line 677.
                                                                                                                    return Some(v384.clone());
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    &SimpleAst::Constant {
                                                                                        c: v956,
                                                                                        width: v957,
                                                                                    } => {
                                                                                        let v958 = &C::lookup_value(ctx, v953);
                                                                                        if let Some(v959) = v958 {
                                                                                            if let &SimpleAst::Neg {
                                                                                                a: v960,
                                                                                            } = v959 {
                                                                                                if v97 == v960 {
                                                                                                    let v961 = C::is_constant_modulo(ctx, v956, 0x2, v957);
                                                                                                    if let Some(v962) = v961 {
                                                                                                        let v963 = C::is_constant_modulo(ctx, v941, 0xFFFFFFFFFFFFFFFF, v957);
                                                                                                        if let Some(v964) = v963 {
                                                                                                            let v384 = &C::any(ctx, v97);
                                                                                                            // Rule at .\isle\mba.isle line 669.
                                                                                                            return Some(v384.clone());
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    _ => {}
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            &SimpleAst::Neg {
                                                a: v821,
                                            } => {
                                                if let Some(v109) = v108 {
                                                    if let &SimpleAst::Mul {
                                                        a: v732,
                                                        b: v733,
                                                    } = v109 {
                                                        if v733 == v818 {
                                                            let v734 = &C::lookup_value(ctx, v732);
                                                            if let Some(v735) = v734 {
                                                                if let &SimpleAst::Constant {
                                                                    c: v736,
                                                                    width: v737,
                                                                } = v735 {
                                                                    let v805 = C::is_constant_modulo(ctx, v736, 0xFFFFFFFFFFFFFFFF, v737);
                                                                    if let Some(v806) = v805 {
                                                                        let v822 = &C::lookup_value(ctx, v821);
                                                                        if let Some(v823) = v822 {
                                                                            if let &SimpleAst::Mul {
                                                                                a: v824,
                                                                                b: v825,
                                                                            } = v823 {
                                                                                if v733 == v825 {
                                                                                    let v826 = &C::lookup_value(ctx, v824);
                                                                                    if let Some(v827) = v826 {
                                                                                        if let &SimpleAst::Constant {
                                                                                            c: v828,
                                                                                            width: v829,
                                                                                        } = v827 {
                                                                                            let v832 = C::is_constant_modulo(ctx, v828, 0xFFFFFFFFFFFFFFFE, v737);
                                                                                            if let Some(v833) = v832 {
                                                                                                let v809 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v737);
                                                                                                let v810 = C::lookup_id(ctx, v809);
                                                                                                let v767 = &C::any(ctx, v733);
                                                                                                let v768 = C::lookup_id(ctx, v767);
                                                                                                let v811 = &C::mul(ctx, v810, v768);
                                                                                                // Rule at .\isle\mba.isle line 591.
                                                                                                return Some(v811.clone());
                                                                                            }
                                                                                            let v830 = C::is_constant_modulo(ctx, v828, 0x2, v737);
                                                                                            if let Some(v831) = v830 {
                                                                                                let v809 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v737);
                                                                                                let v810 = C::lookup_id(ctx, v809);
                                                                                                let v767 = &C::any(ctx, v733);
                                                                                                let v768 = C::lookup_id(ctx, v767);
                                                                                                let v811 = &C::mul(ctx, v810, v768);
                                                                                                // Rule at .\isle\mba.isle line 583.
                                                                                                return Some(v811.clone());
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            _ => {}
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                    }
                    &SimpleAst::Xor {
                        a: v753,
                        b: v754,
                    } => {
                        if let Some(v109) = v108 {
                            if let &SimpleAst::Mul {
                                a: v732,
                                b: v733,
                            } = v109 {
                                if v733 == v753 {
                                    let v734 = &C::lookup_value(ctx, v732);
                                    if let Some(v735) = v734 {
                                        if let &SimpleAst::Constant {
                                            c: v736,
                                            width: v737,
                                        } = v735 {
                                            let v748 = C::is_constant_modulo(ctx, v736, 0x2, v737);
                                            if let Some(v749) = v748 {
                                                let v755 = &C::lookup_value(ctx, v754);
                                                if let Some(v756) = v755 {
                                                    if let &SimpleAst::Mul {
                                                        a: v757,
                                                        b: v758,
                                                    } = v756 {
                                                        if v733 == v758 {
                                                            let v759 = &C::lookup_value(ctx, v757);
                                                            if let Some(v760) = v759 {
                                                                if let &SimpleAst::Constant {
                                                                    c: v761,
                                                                    width: v762,
                                                                } = v760 {
                                                                    let v763 = C::is_constant_modulo(ctx, v761, 0xFFFFFFFFFFFFFFFF, v737);
                                                                    if let Some(v764) = v763 {
                                                                        let v765 = &C::constant(ctx, 0x2, v737);
                                                                        let v766 = C::lookup_id(ctx, v765);
                                                                        let v767 = &C::any(ctx, v733);
                                                                        let v768 = C::lookup_id(ctx, v767);
                                                                        let v769 = &C::mul(ctx, v766, v768);
                                                                        // Rule at .\isle\mba.isle line 551.
                                                                        return Some(v769.clone());
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::Neg {
                        a: v385,
                    } => {
                        let v602 = &C::lookup_value(ctx, v385);
                        if let Some(v603) = v602 {
                            match v603 {
                                &SimpleAst::And {
                                    a: v795,
                                    b: v796,
                                } => {
                                    if let Some(v109) = v108 {
                                        if let &SimpleAst::Mul {
                                            a: v732,
                                            b: v733,
                                        } = v109 {
                                            if v733 == v795 {
                                                let v734 = &C::lookup_value(ctx, v732);
                                                if let Some(v735) = v734 {
                                                    if let &SimpleAst::Constant {
                                                        c: v736,
                                                        width: v737,
                                                    } = v735 {
                                                        let v797 = &C::lookup_value(ctx, v796);
                                                        if let Some(v798) = v797 {
                                                            if let &SimpleAst::Mul {
                                                                a: v799,
                                                                b: v800,
                                                            } = v798 {
                                                                if v733 == v800 {
                                                                    let v801 = &C::lookup_value(ctx, v799);
                                                                    if let Some(v802) = v801 {
                                                                        if let &SimpleAst::Constant {
                                                                            c: v803,
                                                                            width: v804,
                                                                        } = v802 {
                                                                            let v805 = C::is_constant_modulo(ctx, v736, 0xFFFFFFFFFFFFFFFF, v737);
                                                                            if let Some(v806) = v805 {
                                                                                let v812 = C::is_constant_modulo(ctx, v803, 0xFFFFFFFFFFFFFFFE, v737);
                                                                                if let Some(v813) = v812 {
                                                                                    let v809 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v737);
                                                                                    let v810 = C::lookup_id(ctx, v809);
                                                                                    let v767 = &C::any(ctx, v733);
                                                                                    let v768 = C::lookup_id(ctx, v767);
                                                                                    let v811 = &C::mul(ctx, v810, v768);
                                                                                    // Rule at .\isle\mba.isle line 575.
                                                                                    return Some(v811.clone());
                                                                                }
                                                                                let v807 = C::is_constant_modulo(ctx, v803, 0x2, v737);
                                                                                if let Some(v808) = v807 {
                                                                                    let v809 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v737);
                                                                                    let v810 = C::lookup_id(ctx, v809);
                                                                                    let v767 = &C::any(ctx, v733);
                                                                                    let v768 = C::lookup_id(ctx, v767);
                                                                                    let v811 = &C::mul(ctx, v810, v768);
                                                                                    // Rule at .\isle\mba.isle line 567.
                                                                                    return Some(v811.clone());
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                &SimpleAst::Or {
                                    a: v604,
                                    b: v605,
                                } => {
                                    if v97 == v604 {
                                        let v386 = C::get_width(ctx, v97);
                                        let v387 = &C::constant(ctx, 0x0, v386);
                                        // Rule at .\isle\mba.isle line 497.
                                        return Some(v387.clone());
                                    }
                                }
                                &SimpleAst::Xor {
                                    a: v738,
                                    b: v739,
                                } => {
                                    if let Some(v109) = v108 {
                                        if let &SimpleAst::Mul {
                                            a: v732,
                                            b: v733,
                                        } = v109 {
                                            if v733 == v738 {
                                                let v734 = &C::lookup_value(ctx, v732);
                                                if let Some(v735) = v734 {
                                                    if let &SimpleAst::Constant {
                                                        c: v736,
                                                        width: v737,
                                                    } = v735 {
                                                        let v740 = &C::lookup_value(ctx, v739);
                                                        if let Some(v741) = v740 {
                                                            if let &SimpleAst::Mul {
                                                                a: v742,
                                                                b: v743,
                                                            } = v741 {
                                                                if v733 == v743 {
                                                                    let v744 = &C::lookup_value(ctx, v742);
                                                                    if let Some(v745) = v744 {
                                                                        if let &SimpleAst::Constant {
                                                                            c: v746,
                                                                            width: v747,
                                                                        } = v745 {
                                                                            let v748 = C::is_constant_modulo(ctx, v736, 0x2, v737);
                                                                            if let Some(v749) = v748 {
                                                                                let v750 = C::is_constant_modulo(ctx, v746, 0xFFFFFFFFFFFFFFFF, v737);
                                                                                if let Some(v751) = v750 {
                                                                                    let v752 = &C::constant(ctx, 0x0, v737);
                                                                                    // Rule at .\isle\mba.isle line 543.
                                                                                    return Some(v752.clone());
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                    }
                    _ => {}
                }
            }
            if let Some(v109) = v108 {
                if let &SimpleAst::Add {
                    a: v423,
                    b: v424,
                } = v109 {
                    let v425 = &C::lookup_value(ctx, v423);
                    if let Some(v426) = v425 {
                        if let &SimpleAst::Constant {
                            c: v427,
                            width: v428,
                        } = v426 {
                            let v429 = &C::lookup_value(ctx, v424);
                            if let Some(v430) = v429 {
                                if let &SimpleAst::Mul {
                                    a: v431,
                                    b: v432,
                                } = v430 {
                                    let v433 = &C::lookup_value(ctx, v431);
                                    if let Some(v434) = v433 {
                                        if let &SimpleAst::Constant {
                                            c: v435,
                                            width: v436,
                                        } = v434 {
                                            if v427 == v435 {
                                                let v437 = C::is_constant_modulo(ctx, v427, 0xFFFFFFFFFFFFFFFF, v428);
                                                if let Some(v438) = v437 {
                                                    let v439 = &C::any(ctx, v432);
                                                    let v440 = C::lookup_id(ctx, v439);
                                                    let v441 = &C::neg(ctx, v440);
                                                    let v442 = C::lookup_id(ctx, v441);
                                                    let v120 = &C::any(ctx, v98);
                                                    let v121 = C::lookup_id(ctx, v120);
                                                    let v443 = &C::and(ctx, v442, v121);
                                                    // Rule at .\isle\mba.isle line 400.
                                                    return Some(v443.clone());
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if let Some(v100) = v99 {
                if let &SimpleAst::Neg {
                    a: v385,
                } = v100 {
                    if v97 == v385 {
                        let v386 = C::get_width(ctx, v97);
                        let v387 = &C::constant(ctx, 0x0, v386);
                        // Rule at .\isle\mba.isle line 333.
                        return Some(v387.clone());
                    }
                }
            }
            if v97 == v98 {
                let v384 = &C::any(ctx, v97);
                // Rule at .\isle\mba.isle line 327.
                return Some(v384.clone());
            }
            if let Some(v109) = v108 {
                match v109 {
                    &SimpleAst::And {
                        a: v110,
                        b: v111,
                    } => {
                        let v112 = &C::lookup_value(ctx, v110);
                        if let Some(v113) = v112 {
                            if let &SimpleAst::Constant {
                                c: v114,
                                width: v115,
                            } = v113 {
                                let v116 = &C::constant(ctx, v114, v115);
                                let v117 = C::lookup_id(ctx, v116);
                                let v118 = &C::any(ctx, v111);
                                let v119 = C::lookup_id(ctx, v118);
                                let v120 = &C::any(ctx, v98);
                                let v121 = C::lookup_id(ctx, v120);
                                let v122 = &C::and(ctx, v119, v121);
                                let v123 = C::lookup_id(ctx, v122);
                                let v124 = &C::and(ctx, v117, v123);
                                // Rule at .\isle\mba.isle line 141.
                                return Some(v124.clone());
                            }
                        }
                    }
                    &SimpleAst::Constant {
                        c: v125,
                        width: v126,
                    } => {
                        let v381 = C::is_constant_modulo(ctx, v125, 0xFFFFFFFFFFFFFFFF, v126);
                        if let Some(v382) = v381 {
                            let v383 = &C::any(ctx, v98);
                            // Rule at .\isle\mba.isle line 320.
                            return Some(v383.clone());
                        }
                        let v378 = C::is_constant_modulo(ctx, v125, 0x0, v126);
                        if let Some(v379) = v378 {
                            let v380 = &C::constant(ctx, 0x0, v126);
                            // Rule at .\isle\mba.isle line 313.
                            return Some(v380.clone());
                        }
                        if let Some(v100) = v99 {
                            match v100 {
                                &SimpleAst::And {
                                    a: v127,
                                    b: v128,
                                } => {
                                    let v129 = &C::lookup_value(ctx, v127);
                                    if let Some(v130) = v129 {
                                        if let &SimpleAst::Constant {
                                            c: v131,
                                            width: v132,
                                        } = v130 {
                                            let v133 = &C::constant(ctx, v125, v126);
                                            let v134 = C::lookup_id(ctx, v133);
                                            let v135 = &C::constant(ctx, v131, v126);
                                            let v136 = C::lookup_id(ctx, v135);
                                            let v137 = &C::and(ctx, v134, v136);
                                            let v138 = C::lookup_id(ctx, v137);
                                            let v139 = &C::any(ctx, v128);
                                            let v140 = C::lookup_id(ctx, v139);
                                            let v141 = &C::and(ctx, v138, v140);
                                            // Rule at .\isle\mba.isle line 147.
                                            return Some(v141.clone());
                                        }
                                    }
                                }
                                &SimpleAst::Constant {
                                    c: v101,
                                    width: v102,
                                } => {
                                    let v133 = &C::constant(ctx, v125, v126);
                                    let v134 = C::lookup_id(ctx, v133);
                                    let v142 = &C::constant(ctx, v101, v126);
                                    let v143 = C::lookup_id(ctx, v142);
                                    let v144 = &C::and(ctx, v134, v143);
                                    // Rule at .\isle\mba.isle line 153.
                                    return Some(v144.clone());
                                }
                                _ => {}
                            }
                        }
                    }
                    _ => {}
                }
            }
            if let Some(v100) = v99 {
                if let &SimpleAst::Constant {
                    c: v101,
                    width: v102,
                } = v100 {
                    let v103 = &C::constant(ctx, v101, v102);
                    let v104 = C::lookup_id(ctx, v103);
                    let v105 = &C::any(ctx, v97);
                    let v106 = C::lookup_id(ctx, v105);
                    let v107 = &C::and(ctx, v104, v106);
                    // Rule at .\isle\mba.isle line 135.
                    return Some(v107.clone());
                }
            }
        }
        &SimpleAst::Or {
            a: v145,
            b: v146,
        } => {
            let v156 = &C::lookup_value(ctx, v145);
            if let Some(v157) = v156 {
                match v157 {
                    &SimpleAst::Mul {
                        a: v701,
                        b: v702,
                    } => {
                        let v147 = &C::lookup_value(ctx, v146);
                        if let Some(v148) = v147 {
                            if let &SimpleAst::And {
                                a: v368,
                                b: v369,
                            } = v148 {
                                let v703 = &C::lookup_value(ctx, v701);
                                if let Some(v704) = v703 {
                                    if let &SimpleAst::Constant {
                                        c: v705,
                                        width: v706,
                                    } = v704 {
                                        let v867 = C::is_constant_modulo(ctx, v705, 0xFFFFFFFFFFFFFFFF, v706);
                                        if let Some(v868) = v867 {
                                            let v1036 = &C::lookup_value(ctx, v702);
                                            if let Some(v1037) = v1036 {
                                                if let &SimpleAst::Or {
                                                    a: v1038,
                                                    b: v1039,
                                                } = v1037 {
                                                    let v1040 = &C::lookup_value(ctx, v1038);
                                                    if let Some(v1041) = v1040 {
                                                        if let &SimpleAst::Mul {
                                                            a: v1042,
                                                            b: v1043,
                                                        } = v1041 {
                                                            if v368 == v1043 {
                                                                let v1044 = &C::lookup_value(ctx, v1042);
                                                                if let Some(v1045) = v1044 {
                                                                    if let &SimpleAst::Constant {
                                                                        c: v1046,
                                                                        width: v1047,
                                                                    } = v1045 {
                                                                        if v705 == v1046 {
                                                                            let v1048 = &C::lookup_value(ctx, v1039);
                                                                            if let Some(v1049) = v1048 {
                                                                                if let &SimpleAst::And {
                                                                                    a: v1050,
                                                                                    b: v1051,
                                                                                } = v1049 {
                                                                                    let v1052 = &C::lookup_value(ctx, v1050);
                                                                                    if let Some(v1053) = v1052 {
                                                                                        if let &SimpleAst::And {
                                                                                            a: v1054,
                                                                                            b: v1055,
                                                                                        } = v1053 {
                                                                                            if v368 == v1054 {
                                                                                                if v369 == v1055 {
                                                                                                    let v1056 = &C::any(ctx, v1043);
                                                                                                    // Rule at .\isle\mba.isle line 732.
                                                                                                    return Some(v1056.clone());
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::And {
                        a: v363,
                        b: v364,
                    } => {
                        if v146 == v363 {
                            let v1068 = &C::any(ctx, v363);
                            // Rule at .\isle\mba.isle line 965.
                            return Some(v1068.clone());
                        }
                        let v147 = &C::lookup_value(ctx, v146);
                        if let Some(v148) = v147 {
                            if let &SimpleAst::Xor {
                                a: v1066,
                                b: v1067,
                            } = v148 {
                                if v364 == v1067 {
                                    let v365 = &C::lookup_value(ctx, v363);
                                    if let Some(v366) = v365 {
                                        if let &SimpleAst::And {
                                            a: v1079,
                                            b: v1080,
                                        } = v366 {
                                            if v1066 == v1080 {
                                                let v1081 = &C::any(ctx, v1079);
                                                let v1082 = C::lookup_id(ctx, v1081);
                                                let v1083 = &C::any(ctx, v1080);
                                                let v1084 = C::lookup_id(ctx, v1083);
                                                let v1085 = &C::and(ctx, v1082, v1084);
                                                let v1086 = C::lookup_id(ctx, v1085);
                                                let v1087 = &C::any(ctx, v364);
                                                let v1088 = C::lookup_id(ctx, v1087);
                                                let v1089 = &C::and(ctx, v1086, v1088);
                                                let v1090 = C::lookup_id(ctx, v1089);
                                                let v1091 = &C::any(ctx, v1080);
                                                let v1092 = C::lookup_id(ctx, v1091);
                                                let v1093 = &C::any(ctx, v364);
                                                let v1094 = C::lookup_id(ctx, v1093);
                                                let v1095 = &C::xor(ctx, v1092, v1094);
                                                let v1096 = C::lookup_id(ctx, v1095);
                                                let v1097 = &C::add(ctx, v1090, v1096);
                                                // Rule at .\isle\mba.isle line 753.
                                                return Some(v1097.clone());
                                            }
                                        }
                                    }
                                    if v363 == v1066 {
                                        let v1068 = &C::any(ctx, v363);
                                        let v1069 = C::lookup_id(ctx, v1068);
                                        let v375 = &C::any(ctx, v364);
                                        let v376 = C::lookup_id(ctx, v375);
                                        let v1070 = &C::and(ctx, v1069, v376);
                                        let v1071 = C::lookup_id(ctx, v1070);
                                        let v1072 = &C::any(ctx, v363);
                                        let v1073 = C::lookup_id(ctx, v1072);
                                        let v1074 = &C::any(ctx, v364);
                                        let v1075 = C::lookup_id(ctx, v1074);
                                        let v1076 = &C::xor(ctx, v1073, v1075);
                                        let v1077 = C::lookup_id(ctx, v1076);
                                        let v1078 = &C::add(ctx, v1071, v1077);
                                        // Rule at .\isle\mba.isle line 747.
                                        return Some(v1078.clone());
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::Xor {
                        a: v1144,
                        b: v1145,
                    } => {
                        if v146 == v1144 {
                            let v1146 = &C::any(ctx, v1144);
                            let v1147 = C::lookup_id(ctx, v1146);
                            let v1148 = &C::any(ctx, v1145);
                            let v1149 = C::lookup_id(ctx, v1148);
                            let v1150 = &C::or(ctx, v1147, v1149);
                            // Rule at .\isle\mba.isle line 796.
                            return Some(v1150.clone());
                        }
                    }
                    &SimpleAst::Neg {
                        a: v1519,
                    } => {
                        let v147 = &C::lookup_value(ctx, v146);
                        if let Some(v148) = v147 {
                            if let &SimpleAst::And {
                                a: v368,
                                b: v369,
                            } = v148 {
                                let v1520 = &C::lookup_value(ctx, v1519);
                                if let Some(v1521) = v1520 {
                                    if let &SimpleAst::Or {
                                        a: v1522,
                                        b: v1523,
                                    } = v1521 {
                                        if v368 == v1522 {
                                            if v369 == v1523 {
                                                let v1524 = &C::any(ctx, v1522);
                                                let v1525 = C::lookup_id(ctx, v1524);
                                                let v1526 = &C::any(ctx, v1523);
                                                let v1527 = C::lookup_id(ctx, v1526);
                                                let v1528 = &C::xor(ctx, v1525, v1527);
                                                let v1529 = C::lookup_id(ctx, v1528);
                                                let v1530 = &C::neg(ctx, v1529);
                                                // Rule at .\isle\mba.isle line 1034.
                                                return Some(v1530.clone());
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    _ => {}
                }
            }
            let v147 = &C::lookup_value(ctx, v146);
            if let Some(v148) = v147 {
                match v148 {
                    &SimpleAst::Add {
                        a: v987,
                        b: v988,
                    } => {
                        let v993 = &C::lookup_value(ctx, v988);
                        if let Some(v994) = v993 {
                            if let &SimpleAst::Mul {
                                a: v995,
                                b: v996,
                            } = v994 {
                                let v997 = &C::lookup_value(ctx, v995);
                                if let Some(v998) = v997 {
                                    if let &SimpleAst::Constant {
                                        c: v999,
                                        width: v1000,
                                    } = v998 {
                                        let v1001 = C::is_constant_modulo(ctx, v999, 0xFFFFFFFFFFFFFFFF, v1000);
                                        if let Some(v1002) = v1001 {
                                            if v145 == v987 {
                                                let v1003 = &C::lookup_value(ctx, v996);
                                                if let Some(v1004) = v1003 {
                                                    if let &SimpleAst::And {
                                                        a: v1005,
                                                        b: v1006,
                                                    } = v1004 {
                                                        if v145 == v1005 {
                                                            let v350 = &C::any(ctx, v145);
                                                            // Rule at .\isle\mba.isle line 705.
                                                            return Some(v350.clone());
                                                        }
                                                    }
                                                }
                                            }
                                            let v989 = &C::lookup_value(ctx, v987);
                                            if let Some(v990) = v989 {
                                                if let &SimpleAst::Or {
                                                    a: v991,
                                                    b: v992,
                                                } = v990 {
                                                    if v145 == v991 {
                                                        if v992 == v996 {
                                                            let v350 = &C::any(ctx, v145);
                                                            // Rule at .\isle\mba.isle line 698.
                                                            return Some(v350.clone());
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::Mul {
                        a: v770,
                        b: v771,
                    } => {
                        let v772 = &C::lookup_value(ctx, v770);
                        if let Some(v773) = v772 {
                            if let &SimpleAst::Constant {
                                c: v774,
                                width: v775,
                            } = v773 {
                                let v776 = &C::lookup_value(ctx, v771);
                                if let Some(v777) = v776 {
                                    match v777 {
                                        &SimpleAst::Or {
                                            a: v834,
                                            b: v835,
                                        } => {
                                            let v836 = &C::lookup_value(ctx, v835);
                                            if let Some(v837) = v836 {
                                                match v837 {
                                                    &SimpleAst::Mul {
                                                        a: v838,
                                                        b: v839,
                                                    } => {
                                                        if v145 == v839 {
                                                            let v844 = C::is_constant_modulo(ctx, v774, 0xFFFFFFFFFFFFFFFF, v775);
                                                            if let Some(v845) = v844 {
                                                                let v973 = &C::lookup_value(ctx, v834);
                                                                if let Some(v974) = v973 {
                                                                    if let &SimpleAst::Mul {
                                                                        a: v975,
                                                                        b: v976,
                                                                    } = v974 {
                                                                        if v145 == v976 {
                                                                            let v977 = &C::lookup_value(ctx, v975);
                                                                            if let Some(v978) = v977 {
                                                                                if let &SimpleAst::Constant {
                                                                                    c: v979,
                                                                                    width: v980,
                                                                                } = v978 {
                                                                                    if v774 == v979 {
                                                                                        let v840 = &C::lookup_value(ctx, v838);
                                                                                        if let Some(v841) = v840 {
                                                                                            if let &SimpleAst::Mul {
                                                                                                a: v981,
                                                                                                b: v982,
                                                                                            } = v841 {
                                                                                                let v983 = &C::lookup_value(ctx, v981);
                                                                                                if let Some(v984) = v983 {
                                                                                                    if let &SimpleAst::Constant {
                                                                                                        c: v985,
                                                                                                        width: v986,
                                                                                                    } = v984 {
                                                                                                        if v774 == v985 {
                                                                                                            let v350 = &C::any(ctx, v145);
                                                                                                            // Rule at .\isle\mba.isle line 691.
                                                                                                            return Some(v350.clone());
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        let v350 = &C::any(ctx, v145);
                                                                                        // Rule at .\isle\mba.isle line 684.
                                                                                        return Some(v350.clone());
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                if v145 == v834 {
                                                                    let v840 = &C::lookup_value(ctx, v838);
                                                                    if let Some(v841) = v840 {
                                                                        if let &SimpleAst::Constant {
                                                                            c: v842,
                                                                            width: v843,
                                                                        } = v841 {
                                                                            if v774 == v842 {
                                                                                let v350 = &C::any(ctx, v145);
                                                                                // Rule at .\isle\mba.isle line 599.
                                                                                return Some(v350.clone());
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    &SimpleAst::And {
                                                        a: v1016,
                                                        b: v1017,
                                                    } => {
                                                        if v145 == v1016 {
                                                            let v844 = C::is_constant_modulo(ctx, v774, 0xFFFFFFFFFFFFFFFF, v775);
                                                            if let Some(v845) = v844 {
                                                                let v973 = &C::lookup_value(ctx, v834);
                                                                if let Some(v974) = v973 {
                                                                    if let &SimpleAst::Mul {
                                                                        a: v975,
                                                                        b: v976,
                                                                    } = v974 {
                                                                        if v976 == v1017 {
                                                                            let v977 = &C::lookup_value(ctx, v975);
                                                                            if let Some(v978) = v977 {
                                                                                if let &SimpleAst::Constant {
                                                                                    c: v979,
                                                                                    width: v980,
                                                                                } = v978 {
                                                                                    if v774 == v979 {
                                                                                        let v350 = &C::any(ctx, v145);
                                                                                        let v1018 = C::lookup_id(ctx, v350);
                                                                                        let v1019 = &C::any(ctx, v976);
                                                                                        let v1020 = C::lookup_id(ctx, v1019);
                                                                                        let v1021 = &C::or(ctx, v1018, v1020);
                                                                                        // Rule at .\isle\mba.isle line 718.
                                                                                        return Some(v1021.clone());
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    _ => {}
                                                }
                                            }
                                        }
                                        &SimpleAst::Xor {
                                            a: v778,
                                            b: v779,
                                        } => {
                                            if let Some(v157) = v156 {
                                                if let &SimpleAst::Mul {
                                                    a: v701,
                                                    b: v702,
                                                } = v157 {
                                                    if v702 == v778 {
                                                        let v703 = &C::lookup_value(ctx, v701);
                                                        if let Some(v704) = v703 {
                                                            if let &SimpleAst::Constant {
                                                                c: v705,
                                                                width: v706,
                                                            } = v704 {
                                                                let v727 = C::is_constant_modulo(ctx, v705, 0x2, v706);
                                                                if let Some(v728) = v727 {
                                                                    let v780 = &C::lookup_value(ctx, v779);
                                                                    if let Some(v781) = v780 {
                                                                        if let &SimpleAst::Mul {
                                                                            a: v782,
                                                                            b: v783,
                                                                        } = v781 {
                                                                            if v702 == v783 {
                                                                                let v784 = &C::lookup_value(ctx, v782);
                                                                                if let Some(v785) = v784 {
                                                                                    if let &SimpleAst::Constant {
                                                                                        c: v786,
                                                                                        width: v787,
                                                                                    } = v785 {
                                                                                        if v774 == v786 {
                                                                                            let v788 = C::is_constant_modulo(ctx, v774, 0xFFFFFFFFFFFFFFFF, v706);
                                                                                            if let Some(v789) = v788 {
                                                                                                let v790 = &C::constant(ctx, 0x2, v706);
                                                                                                let v791 = C::lookup_id(ctx, v790);
                                                                                                let v792 = &C::any(ctx, v702);
                                                                                                let v793 = C::lookup_id(ctx, v792);
                                                                                                let v794 = &C::mul(ctx, v791, v793);
                                                                                                // Rule at .\isle\mba.isle line 559.
                                                                                                return Some(v794.clone());
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        _ => {}
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::And {
                        a: v368,
                        b: v369,
                    } => {
                        let v370 = &C::lookup_value(ctx, v369);
                        if let Some(v371) = v370 {
                            if let &SimpleAst::Mul {
                                a: v861,
                                b: v862,
                            } = v371 {
                                let v858 = &C::lookup_value(ctx, v368);
                                if let Some(v859) = v858 {
                                    match v859 {
                                        &SimpleAst::Mul {
                                            a: v892,
                                            b: v893,
                                        } => {
                                            let v863 = &C::lookup_value(ctx, v861);
                                            if let Some(v864) = v863 {
                                                match v864 {
                                                    &SimpleAst::Mul {
                                                        a: v908,
                                                        b: v909,
                                                    } => {
                                                        let v894 = &C::lookup_value(ctx, v892);
                                                        if let Some(v895) = v894 {
                                                            if let &SimpleAst::Constant {
                                                                c: v896,
                                                                width: v897,
                                                            } = v895 {
                                                                let v898 = &C::lookup_value(ctx, v893);
                                                                if let Some(v899) = v898 {
                                                                    if let &SimpleAst::Neg {
                                                                        a: v900,
                                                                    } = v899 {
                                                                        if v145 == v900 {
                                                                            let v901 = &C::lookup_value(ctx, v862);
                                                                            if let Some(v902) = v901 {
                                                                                if let &SimpleAst::Neg {
                                                                                    a: v903,
                                                                                } = v902 {
                                                                                    if v145 == v903 {
                                                                                        let v904 = C::is_constant_modulo(ctx, v896, 0xFFFFFFFFFFFFFFFF, v897);
                                                                                        if let Some(v905) = v904 {
                                                                                            let v910 = &C::lookup_value(ctx, v908);
                                                                                            if let Some(v911) = v910 {
                                                                                                if let &SimpleAst::Constant {
                                                                                                    c: v912,
                                                                                                    width: v913,
                                                                                                } = v911 {
                                                                                                    if v896 == v912 {
                                                                                                        let v914 = &C::lookup_value(ctx, v909);
                                                                                                        if let Some(v915) = v914 {
                                                                                                            if let &SimpleAst::Constant {
                                                                                                                c: v916,
                                                                                                                width: v917,
                                                                                                            } = v915 {
                                                                                                                let v918 = C::is_constant_modulo(ctx, v916, 0x2, v897);
                                                                                                                if let Some(v919) = v918 {
                                                                                                                    let v350 = &C::any(ctx, v145);
                                                                                                                    // Rule at .\isle\mba.isle line 653.
                                                                                                                    return Some(v350.clone());
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    &SimpleAst::Constant {
                                                        c: v865,
                                                        width: v866,
                                                    } => {
                                                        let v894 = &C::lookup_value(ctx, v892);
                                                        if let Some(v895) = v894 {
                                                            if let &SimpleAst::Constant {
                                                                c: v896,
                                                                width: v897,
                                                            } = v895 {
                                                                let v898 = &C::lookup_value(ctx, v893);
                                                                if let Some(v899) = v898 {
                                                                    if let &SimpleAst::Neg {
                                                                        a: v900,
                                                                    } = v899 {
                                                                        if v145 == v900 {
                                                                            let v901 = &C::lookup_value(ctx, v862);
                                                                            if let Some(v902) = v901 {
                                                                                if let &SimpleAst::Neg {
                                                                                    a: v903,
                                                                                } = v902 {
                                                                                    if v145 == v903 {
                                                                                        let v904 = C::is_constant_modulo(ctx, v896, 0xFFFFFFFFFFFFFFFF, v897);
                                                                                        if let Some(v905) = v904 {
                                                                                            let v906 = C::is_constant_modulo(ctx, v865, 0x2, v897);
                                                                                            if let Some(v907) = v906 {
                                                                                                let v350 = &C::any(ctx, v145);
                                                                                                // Rule at .\isle\mba.isle line 645.
                                                                                                return Some(v350.clone());
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    _ => {}
                                                }
                                            }
                                        }
                                        &SimpleAst::Neg {
                                            a: v860,
                                        } => {
                                            if let Some(v157) = v156 {
                                                if let &SimpleAst::Mul {
                                                    a: v701,
                                                    b: v702,
                                                } = v157 {
                                                    if v702 == v860 {
                                                        if v702 == v862 {
                                                            let v703 = &C::lookup_value(ctx, v701);
                                                            if let Some(v704) = v703 {
                                                                if let &SimpleAst::Constant {
                                                                    c: v705,
                                                                    width: v706,
                                                                } = v704 {
                                                                    let v863 = &C::lookup_value(ctx, v861);
                                                                    if let Some(v864) = v863 {
                                                                        if let &SimpleAst::Constant {
                                                                            c: v865,
                                                                            width: v866,
                                                                        } = v864 {
                                                                            let v867 = C::is_constant_modulo(ctx, v705, 0xFFFFFFFFFFFFFFFF, v706);
                                                                            if let Some(v868) = v867 {
                                                                                let v873 = C::is_constant_modulo(ctx, v865, 0xFFFFFFFFFFFFFFFE, v706);
                                                                                if let Some(v874) = v873 {
                                                                                    let v731 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v706);
                                                                                    let v871 = C::lookup_id(ctx, v731);
                                                                                    let v792 = &C::any(ctx, v702);
                                                                                    let v793 = C::lookup_id(ctx, v792);
                                                                                    let v872 = &C::mul(ctx, v871, v793);
                                                                                    // Rule at .\isle\mba.isle line 621.
                                                                                    return Some(v872.clone());
                                                                                }
                                                                                let v869 = C::is_constant_modulo(ctx, v865, 0x2, v706);
                                                                                if let Some(v870) = v869 {
                                                                                    let v731 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v706);
                                                                                    let v871 = C::lookup_id(ctx, v731);
                                                                                    let v792 = &C::any(ctx, v702);
                                                                                    let v793 = C::lookup_id(ctx, v792);
                                                                                    let v872 = &C::mul(ctx, v871, v793);
                                                                                    // Rule at .\isle\mba.isle line 613.
                                                                                    return Some(v872.clone());
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        _ => {}
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::Neg {
                        a: v351,
                    } => {
                        if let Some(v157) = v156 {
                            if let &SimpleAst::Mul {
                                a: v701,
                                b: v702,
                            } = v157 {
                                let v703 = &C::lookup_value(ctx, v701);
                                if let Some(v704) = v703 {
                                    if let &SimpleAst::Constant {
                                        c: v705,
                                        width: v706,
                                    } = v704 {
                                        let v707 = &C::lookup_value(ctx, v351);
                                        if let Some(v708) = v707 {
                                            match v708 {
                                                &SimpleAst::Mul {
                                                    a: v709,
                                                    b: v710,
                                                } => {
                                                    let v711 = &C::lookup_value(ctx, v709);
                                                    if let Some(v712) = v711 {
                                                        if let &SimpleAst::Constant {
                                                            c: v713,
                                                            width: v714,
                                                        } = v712 {
                                                            let v715 = &C::lookup_value(ctx, v710);
                                                            if let Some(v716) = v715 {
                                                                if let &SimpleAst::Xor {
                                                                    a: v717,
                                                                    b: v718,
                                                                } = v716 {
                                                                    if v702 == v717 {
                                                                        let v719 = &C::lookup_value(ctx, v718);
                                                                        if let Some(v720) = v719 {
                                                                            if let &SimpleAst::Mul {
                                                                                a: v721,
                                                                                b: v722,
                                                                            } = v720 {
                                                                                if v702 == v722 {
                                                                                    let v723 = &C::lookup_value(ctx, v721);
                                                                                    if let Some(v724) = v723 {
                                                                                        if let &SimpleAst::Constant {
                                                                                            c: v725,
                                                                                            width: v726,
                                                                                        } = v724 {
                                                                                            if v713 == v725 {
                                                                                                let v727 = C::is_constant_modulo(ctx, v705, 0x2, v706);
                                                                                                if let Some(v728) = v727 {
                                                                                                    let v729 = C::is_constant_modulo(ctx, v713, 0xFFFFFFFFFFFFFFFF, v706);
                                                                                                    if let Some(v730) = v729 {
                                                                                                        let v731 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v706);
                                                                                                        // Rule at .\isle\mba.isle line 535.
                                                                                                        return Some(v731.clone());
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                &SimpleAst::Or {
                                                    a: v875,
                                                    b: v876,
                                                } => {
                                                    if v702 == v875 {
                                                        let v867 = C::is_constant_modulo(ctx, v705, 0xFFFFFFFFFFFFFFFF, v706);
                                                        if let Some(v868) = v867 {
                                                            let v877 = &C::lookup_value(ctx, v876);
                                                            if let Some(v878) = v877 {
                                                                if let &SimpleAst::Neg {
                                                                    a: v879,
                                                                } = v878 {
                                                                    let v880 = &C::lookup_value(ctx, v879);
                                                                    if let Some(v881) = v880 {
                                                                        if let &SimpleAst::Mul {
                                                                            a: v882,
                                                                            b: v883,
                                                                        } = v881 {
                                                                            if v702 == v883 {
                                                                                let v884 = &C::lookup_value(ctx, v882);
                                                                                if let Some(v885) = v884 {
                                                                                    if let &SimpleAst::Constant {
                                                                                        c: v886,
                                                                                        width: v887,
                                                                                    } = v885 {
                                                                                        let v890 = C::is_constant_modulo(ctx, v886, 0xFFFFFFFFFFFFFFFE, v706);
                                                                                        if let Some(v891) = v890 {
                                                                                            let v731 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v706);
                                                                                            let v871 = C::lookup_id(ctx, v731);
                                                                                            let v792 = &C::any(ctx, v702);
                                                                                            let v793 = C::lookup_id(ctx, v792);
                                                                                            let v872 = &C::mul(ctx, v871, v793);
                                                                                            // Rule at .\isle\mba.isle line 637.
                                                                                            return Some(v872.clone());
                                                                                        }
                                                                                        let v888 = C::is_constant_modulo(ctx, v886, 0x2, v706);
                                                                                        if let Some(v889) = v888 {
                                                                                            let v731 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v706);
                                                                                            let v871 = C::lookup_id(ctx, v731);
                                                                                            let v792 = &C::any(ctx, v702);
                                                                                            let v793 = C::lookup_id(ctx, v792);
                                                                                            let v872 = &C::mul(ctx, v871, v793);
                                                                                            // Rule at .\isle\mba.isle line 629.
                                                                                            return Some(v872.clone());
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                _ => {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    _ => {}
                }
            }
            if let Some(v157) = v156 {
                match v157 {
                    &SimpleAst::Add {
                        a: v444,
                        b: v445,
                    } => {
                        let v446 = &C::lookup_value(ctx, v444);
                        if let Some(v447) = v446 {
                            if let &SimpleAst::Constant {
                                c: v448,
                                width: v449,
                            } = v447 {
                                let v450 = &C::lookup_value(ctx, v445);
                                if let Some(v451) = v450 {
                                    if let &SimpleAst::Mul {
                                        a: v452,
                                        b: v453,
                                    } = v451 {
                                        let v454 = &C::lookup_value(ctx, v452);
                                        if let Some(v455) = v454 {
                                            if let &SimpleAst::Constant {
                                                c: v456,
                                                width: v457,
                                            } = v455 {
                                                if v448 == v456 {
                                                    let v458 = C::is_constant_modulo(ctx, v448, 0xFFFFFFFFFFFFFFFF, v449);
                                                    if let Some(v459) = v458 {
                                                        let v460 = &C::any(ctx, v453);
                                                        let v461 = C::lookup_id(ctx, v460);
                                                        let v462 = &C::neg(ctx, v461);
                                                        let v463 = C::lookup_id(ctx, v462);
                                                        let v168 = &C::any(ctx, v146);
                                                        let v169 = C::lookup_id(ctx, v168);
                                                        let v464 = &C::or(ctx, v463, v169);
                                                        // Rule at .\isle\mba.isle line 407.
                                                        return Some(v464.clone());
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::And {
                        a: v363,
                        b: v364,
                    } => {
                        if let Some(v148) = v147 {
                            if let &SimpleAst::And {
                                a: v368,
                                b: v369,
                            } = v148 {
                                let v365 = &C::lookup_value(ctx, v363);
                                if let Some(v366) = v365 {
                                    if let &SimpleAst::Neg {
                                        a: v367,
                                    } = v366 {
                                        if v367 == v368 {
                                            let v370 = &C::lookup_value(ctx, v369);
                                            if let Some(v371) = v370 {
                                                if let &SimpleAst::Neg {
                                                    a: v372,
                                                } = v371 {
                                                    if v364 == v372 {
                                                        let v373 = &C::any(ctx, v367);
                                                        let v374 = C::lookup_id(ctx, v373);
                                                        let v375 = &C::any(ctx, v364);
                                                        let v376 = C::lookup_id(ctx, v375);
                                                        let v377 = &C::xor(ctx, v374, v376);
                                                        // Rule at .\isle\mba.isle line 307.
                                                        return Some(v377.clone());
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    _ => {}
                }
            }
            if let Some(v148) = v147 {
                if let &SimpleAst::Neg {
                    a: v351,
                } = v148 {
                    if v145 == v351 {
                        let v352 = C::get_width(ctx, v145);
                        let v353 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v352);
                        // Rule at .\isle\mba.isle line 281.
                        return Some(v353.clone());
                    }
                }
            }
            if v145 == v146 {
                let v350 = &C::any(ctx, v145);
                // Rule at .\isle\mba.isle line 275.
                return Some(v350.clone());
            }
            if let Some(v157) = v156 {
                match v157 {
                    &SimpleAst::Or {
                        a: v158,
                        b: v159,
                    } => {
                        let v160 = &C::lookup_value(ctx, v158);
                        if let Some(v161) = v160 {
                            if let &SimpleAst::Constant {
                                c: v162,
                                width: v163,
                            } = v161 {
                                let v164 = &C::constant(ctx, v162, v163);
                                let v165 = C::lookup_id(ctx, v164);
                                let v166 = &C::any(ctx, v159);
                                let v167 = C::lookup_id(ctx, v166);
                                let v168 = &C::any(ctx, v146);
                                let v169 = C::lookup_id(ctx, v168);
                                let v170 = &C::or(ctx, v167, v169);
                                let v171 = C::lookup_id(ctx, v170);
                                let v172 = &C::or(ctx, v165, v171);
                                // Rule at .\isle\mba.isle line 165.
                                return Some(v172.clone());
                            }
                        }
                    }
                    &SimpleAst::Constant {
                        c: v173,
                        width: v174,
                    } => {
                        let v347 = C::is_constant_modulo(ctx, v173, 0xFFFFFFFFFFFFFFFF, v174);
                        if let Some(v348) = v347 {
                            let v349 = &C::constant(ctx, 0xFFFFFFFFFFFFFFFF, v174);
                            // Rule at .\isle\mba.isle line 268.
                            return Some(v349.clone());
                        }
                        let v344 = C::is_constant_modulo(ctx, v173, 0x0, v174);
                        if let Some(v345) = v344 {
                            let v346 = &C::any(ctx, v146);
                            // Rule at .\isle\mba.isle line 261.
                            return Some(v346.clone());
                        }
                        if let Some(v148) = v147 {
                            match v148 {
                                &SimpleAst::Or {
                                    a: v175,
                                    b: v176,
                                } => {
                                    let v177 = &C::lookup_value(ctx, v175);
                                    if let Some(v178) = v177 {
                                        if let &SimpleAst::Constant {
                                            c: v179,
                                            width: v180,
                                        } = v178 {
                                            let v181 = &C::constant(ctx, v173, v174);
                                            let v182 = C::lookup_id(ctx, v181);
                                            let v183 = &C::constant(ctx, v179, v174);
                                            let v184 = C::lookup_id(ctx, v183);
                                            let v185 = &C::or(ctx, v182, v184);
                                            let v186 = C::lookup_id(ctx, v185);
                                            let v187 = &C::any(ctx, v176);
                                            let v188 = C::lookup_id(ctx, v187);
                                            let v189 = &C::or(ctx, v186, v188);
                                            // Rule at .\isle\mba.isle line 171.
                                            return Some(v189.clone());
                                        }
                                    }
                                }
                                &SimpleAst::Constant {
                                    c: v149,
                                    width: v150,
                                } => {
                                    let v181 = &C::constant(ctx, v173, v174);
                                    let v182 = C::lookup_id(ctx, v181);
                                    let v190 = &C::constant(ctx, v149, v174);
                                    let v191 = C::lookup_id(ctx, v190);
                                    let v192 = &C::or(ctx, v182, v191);
                                    // Rule at .\isle\mba.isle line 177.
                                    return Some(v192.clone());
                                }
                                _ => {}
                            }
                        }
                    }
                    _ => {}
                }
            }
            if let Some(v148) = v147 {
                if let &SimpleAst::Constant {
                    c: v149,
                    width: v150,
                } = v148 {
                    let v151 = &C::constant(ctx, v149, v150);
                    let v152 = C::lookup_id(ctx, v151);
                    let v153 = &C::any(ctx, v145);
                    let v154 = C::lookup_id(ctx, v153);
                    let v155 = &C::or(ctx, v152, v154);
                    // Rule at .\isle\mba.isle line 159.
                    return Some(v155.clone());
                }
            }
        }
        &SimpleAst::Xor {
            a: v193,
            b: v194,
        } => {
            let v195 = &C::lookup_value(ctx, v194);
            if let Some(v196) = v195 {
                if let &SimpleAst::Or {
                    a: v1098,
                    b: v1099,
                } = v196 {
                    let v1531 = &C::lookup_value(ctx, v1099);
                    if let Some(v1532) = v1531 {
                        if let &SimpleAst::Neg {
                            a: v1533,
                        } = v1532 {
                            let v1534 = &C::lookup_value(ctx, v1533);
                            if let Some(v1535) = v1534 {
                                if let &SimpleAst::And {
                                    a: v1536,
                                    b: v1537,
                                } = v1535 {
                                    if v193 == v1537 {
                                        let v1100 = &C::any(ctx, v193);
                                        let v1101 = C::lookup_id(ctx, v1100);
                                        let v1538 = &C::any(ctx, v1098);
                                        let v1539 = C::lookup_id(ctx, v1538);
                                        let v1540 = &C::any(ctx, v1536);
                                        let v1541 = C::lookup_id(ctx, v1540);
                                        let v1542 = &C::neg(ctx, v1541);
                                        let v1543 = C::lookup_id(ctx, v1542);
                                        let v1544 = &C::or(ctx, v1539, v1543);
                                        let v1545 = C::lookup_id(ctx, v1544);
                                        let v1546 = &C::and(ctx, v1101, v1545);
                                        let v1547 = C::lookup_id(ctx, v1546);
                                        let v1548 = &C::neg(ctx, v1547);
                                        // Rule at .\isle\mba.isle line 1040.
                                        return Some(v1548.clone());
                                    }
                                }
                            }
                        }
                    }
                }
            }
            let v204 = &C::lookup_value(ctx, v193);
            if let Some(v205) = v204 {
                match v205 {
                    &SimpleAst::And {
                        a: v1322,
                        b: v1323,
                    } => {
                        if let Some(v196) = v195 {
                            if let &SimpleAst::And {
                                a: v1328,
                                b: v1329,
                            } = v196 {
                                if v1322 == v1328 {
                                    let v1374 = &C::lookup_value(ctx, v1323);
                                    if let Some(v1375) = v1374 {
                                        if let &SimpleAst::Xor {
                                            a: v1376,
                                            b: v1377,
                                        } = v1375 {
                                            let v1378 = &C::any(ctx, v1322);
                                            let v1379 = C::lookup_id(ctx, v1378);
                                            let v1380 = &C::any(ctx, v1329);
                                            let v1381 = C::lookup_id(ctx, v1380);
                                            let v1382 = &C::any(ctx, v1376);
                                            let v1383 = C::lookup_id(ctx, v1382);
                                            let v1384 = &C::any(ctx, v1377);
                                            let v1385 = C::lookup_id(ctx, v1384);
                                            let v1386 = &C::xor(ctx, v1383, v1385);
                                            let v1387 = C::lookup_id(ctx, v1386);
                                            let v1388 = &C::xor(ctx, v1381, v1387);
                                            let v1389 = C::lookup_id(ctx, v1388);
                                            let v1390 = &C::and(ctx, v1379, v1389);
                                            // Rule at .\isle\mba.isle line 983.
                                            return Some(v1390.clone());
                                        }
                                    }
                                }
                                let v1324 = &C::lookup_value(ctx, v1322);
                                if let Some(v1325) = v1324 {
                                    if let &SimpleAst::Constant {
                                        c: v1326,
                                        width: v1327,
                                    } = v1325 {
                                        let v1330 = &C::lookup_value(ctx, v1328);
                                        if let Some(v1331) = v1330 {
                                            if let &SimpleAst::Constant {
                                                c: v1332,
                                                width: v1333,
                                            } = v1331 {
                                                if v1326 == v1332 {
                                                    let v1334 = &C::lookup_value(ctx, v1329);
                                                    if let Some(v1335) = v1334 {
                                                        if let &SimpleAst::Add {
                                                            a: v1336,
                                                            b: v1337,
                                                        } = v1335 {
                                                            if v1323 == v1336 {
                                                                let v1338 = &C::lookup_value(ctx, v1337);
                                                                if let Some(v1339) = v1338 {
                                                                    if let &SimpleAst::Mul {
                                                                        a: v1340,
                                                                        b: v1341,
                                                                    } = v1339 {
                                                                        let v1342 = &C::lookup_value(ctx, v1340);
                                                                        if let Some(v1343) = v1342 {
                                                                            if let &SimpleAst::Constant {
                                                                                c: v1344,
                                                                                width: v1345,
                                                                            } = v1343 {
                                                                                let v1346 = &C::lookup_value(ctx, v1341);
                                                                                if let Some(v1347) = v1346 {
                                                                                    if let &SimpleAst::Constant {
                                                                                        c: v1348,
                                                                                        width: v1349,
                                                                                    } = v1347 {
                                                                                        let v1350 = C::is_constant_modulo(ctx, v1326, 0x1, v1327);
                                                                                        if let Some(v1351) = v1350 {
                                                                                            let v1352 = C::is_constant_modulo(ctx, v1344, 0xFFFFFFFFFFFFFFFF, v1327);
                                                                                            if let Some(v1353) = v1352 {
                                                                                                let v1354 = C::is_constant_modulo(ctx, v1348, 0x2, v1327);
                                                                                                if let Some(v1355) = v1354 {
                                                                                                    let v1356 = &C::constant(ctx, 0x0, v1327);
                                                                                                    // Rule at .\isle\mba.isle line 956.
                                                                                                    return Some(v1356.clone());
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    &SimpleAst::Or {
                        a: v1391,
                        b: v1392,
                    } => {
                        let v1393 = &C::lookup_value(ctx, v1391);
                        if let Some(v1394) = v1393 {
                            if let &SimpleAst::Xor {
                                a: v1395,
                                b: v1396,
                            } = v1394 {
                                if v194 == v1395 {
                                    let v1397 = &C::lookup_value(ctx, v1392);
                                    if let Some(v1398) = v1397 {
                                        if let &SimpleAst::And {
                                            a: v1399,
                                            b: v1400,
                                        } = v1398 {
                                            if v194 == v1399 {
                                                let v1401 = &C::any(ctx, v1396);
                                                let v1402 = C::lookup_id(ctx, v1401);
                                                let v1403 = &C::any(ctx, v1400);
                                                let v1404 = C::lookup_id(ctx, v1403);
                                                let v1405 = &C::any(ctx, v1395);
                                                let v1406 = C::lookup_id(ctx, v1405);
                                                let v1407 = &C::and(ctx, v1404, v1406);
                                                let v1408 = C::lookup_id(ctx, v1407);
                                                let v1409 = &C::neg(ctx, v1408);
                                                let v1410 = C::lookup_id(ctx, v1409);
                                                let v1411 = &C::and(ctx, v1402, v1410);
                                                // Rule at .\isle\mba.isle line 989.
                                                return Some(v1411.clone());
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    _ => {}
                }
            }
            if let Some(v196) = v195 {
                if let &SimpleAst::Or {
                    a: v1098,
                    b: v1099,
                } = v196 {
                    if v193 == v1098 {
                        let v1100 = &C::any(ctx, v193);
                        let v1101 = C::lookup_id(ctx, v1100);
                        let v1102 = &C::neg(ctx, v1101);
                        let v1103 = C::lookup_id(ctx, v1102);
                        let v1104 = &C::any(ctx, v1099);
                        let v1105 = C::lookup_id(ctx, v1104);
                        let v1106 = &C::and(ctx, v1103, v1105);
                        // Rule at .\isle\mba.isle line 759.
                        return Some(v1106.clone());
                    }
                }
            }
            if let Some(v205) = v204 {
                if let &SimpleAst::Add {
                    a: v465,
                    b: v466,
                } = v205 {
                    let v467 = &C::lookup_value(ctx, v465);
                    if let Some(v468) = v467 {
                        if let &SimpleAst::Constant {
                            c: v469,
                            width: v470,
                        } = v468 {
                            let v471 = &C::lookup_value(ctx, v466);
                            if let Some(v472) = v471 {
                                if let &SimpleAst::Mul {
                                    a: v473,
                                    b: v474,
                                } = v472 {
                                    let v475 = &C::lookup_value(ctx, v473);
                                    if let Some(v476) = v475 {
                                        if let &SimpleAst::Constant {
                                            c: v477,
                                            width: v478,
                                        } = v476 {
                                            if v469 == v477 {
                                                let v479 = C::is_constant_modulo(ctx, v469, 0xFFFFFFFFFFFFFFFF, v470);
                                                if let Some(v480) = v479 {
                                                    let v481 = &C::any(ctx, v474);
                                                    let v482 = C::lookup_id(ctx, v481);
                                                    let v483 = &C::neg(ctx, v482);
                                                    let v484 = C::lookup_id(ctx, v483);
                                                    let v216 = &C::any(ctx, v194);
                                                    let v217 = C::lookup_id(ctx, v216);
                                                    let v485 = &C::xor(ctx, v484, v217);
                                                    // Rule at .\isle\mba.isle line 414.
                                                    return Some(v485.clone());
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if v193 == v194 {
                let v361 = C::get_width(ctx, v193);
                let v362 = &C::constant(ctx, 0x0, v361);
                // Rule at .\isle\mba.isle line 301.
                return Some(v362.clone());
            }
            if let Some(v205) = v204 {
                match v205 {
                    &SimpleAst::Xor {
                        a: v206,
                        b: v207,
                    } => {
                        let v208 = &C::lookup_value(ctx, v206);
                        if let Some(v209) = v208 {
                            if let &SimpleAst::Constant {
                                c: v210,
                                width: v211,
                            } = v209 {
                                let v212 = &C::constant(ctx, v210, v211);
                                let v213 = C::lookup_id(ctx, v212);
                                let v214 = &C::any(ctx, v207);
                                let v215 = C::lookup_id(ctx, v214);
                                let v216 = &C::any(ctx, v194);
                                let v217 = C::lookup_id(ctx, v216);
                                let v218 = &C::xor(ctx, v215, v217);
                                let v219 = C::lookup_id(ctx, v218);
                                let v220 = &C::xor(ctx, v213, v219);
                                // Rule at .\isle\mba.isle line 189.
                                return Some(v220.clone());
                            }
                        }
                    }
                    &SimpleAst::Constant {
                        c: v221,
                        width: v222,
                    } => {
                        let v357 = C::is_constant_modulo(ctx, v221, 0xFFFFFFFFFFFFFFFF, v222);
                        if let Some(v358) = v357 {
                            let v356 = &C::any(ctx, v194);
                            let v359 = C::lookup_id(ctx, v356);
                            let v360 = &C::neg(ctx, v359);
                            // Rule at .\isle\mba.isle line 294.
                            return Some(v360.clone());
                        }
                        let v354 = C::is_constant_modulo(ctx, v221, 0x0, v222);
                        if let Some(v355) = v354 {
                            let v356 = &C::any(ctx, v194);
                            // Rule at .\isle\mba.isle line 287.
                            return Some(v356.clone());
                        }
                        if let Some(v196) = v195 {
                            match v196 {
                                &SimpleAst::Xor {
                                    a: v223,
                                    b: v224,
                                } => {
                                    let v225 = &C::lookup_value(ctx, v223);
                                    if let Some(v226) = v225 {
                                        if let &SimpleAst::Constant {
                                            c: v227,
                                            width: v228,
                                        } = v226 {
                                            let v229 = &C::constant(ctx, v221, v222);
                                            let v230 = C::lookup_id(ctx, v229);
                                            let v231 = &C::constant(ctx, v227, v222);
                                            let v232 = C::lookup_id(ctx, v231);
                                            let v233 = &C::xor(ctx, v230, v232);
                                            let v234 = C::lookup_id(ctx, v233);
                                            let v235 = &C::any(ctx, v224);
                                            let v236 = C::lookup_id(ctx, v235);
                                            let v237 = &C::xor(ctx, v234, v236);
                                            // Rule at .\isle\mba.isle line 195.
                                            return Some(v237.clone());
                                        }
                                    }
                                }
                                &SimpleAst::Constant {
                                    c: v197,
                                    width: v198,
                                } => {
                                    let v229 = &C::constant(ctx, v221, v222);
                                    let v230 = C::lookup_id(ctx, v229);
                                    let v238 = &C::constant(ctx, v197, v222);
                                    let v239 = C::lookup_id(ctx, v238);
                                    let v240 = &C::xor(ctx, v230, v239);
                                    // Rule at .\isle\mba.isle line 201.
                                    return Some(v240.clone());
                                }
                                _ => {}
                            }
                        }
                    }
                    _ => {}
                }
            }
            if let Some(v196) = v195 {
                if let &SimpleAst::Constant {
                    c: v197,
                    width: v198,
                } = v196 {
                    let v199 = &C::constant(ctx, v197, v198);
                    let v200 = C::lookup_id(ctx, v199);
                    let v201 = &C::any(ctx, v193);
                    let v202 = C::lookup_id(ctx, v201);
                    let v203 = &C::xor(ctx, v200, v202);
                    // Rule at .\isle\mba.isle line 183.
                    return Some(v203.clone());
                }
            }
        }
        &SimpleAst::Neg {
            a: v241,
        } => {
            let v242 = &C::lookup_value(ctx, v241);
            if let Some(v243) = v242 {
                match v243 {
                    &SimpleAst::And {
                        a: v547,
                        b: v548,
                    } => {
                        let v549 = &C::lookup_value(ctx, v547);
                        if let Some(v550) = v549 {
                            if let &SimpleAst::Neg {
                                a: v551,
                            } = v550 {
                                let v1128 = &C::lookup_value(ctx, v548);
                                if let Some(v1129) = v1128 {
                                    if let &SimpleAst::Neg {
                                        a: v1130,
                                    } = v1129 {
                                        let v1131 = &C::any(ctx, v1130);
                                        let v1132 = C::lookup_id(ctx, v1131);
                                        let v1133 = &C::any(ctx, v551);
                                        let v1134 = C::lookup_id(ctx, v1133);
                                        let v1135 = &C::or(ctx, v1132, v1134);
                                        // Rule at .\isle\mba.isle line 784.
                                        return Some(v1135.clone());
                                    }
                                }
                                let v552 = &C::any(ctx, v551);
                                let v553 = C::lookup_id(ctx, v552);
                                let v554 = &C::any(ctx, v548);
                                let v555 = C::lookup_id(ctx, v554);
                                let v556 = &C::neg(ctx, v555);
                                let v557 = C::lookup_id(ctx, v556);
                                let v558 = &C::or(ctx, v553, v557);
                                // Rule at .\isle\mba.isle line 461.
                                return Some(v558.clone());
                            }
                        }
                    }
                    &SimpleAst::Or {
                        a: v559,
                        b: v560,
                    } => {
                        let v561 = &C::lookup_value(ctx, v559);
                        if let Some(v562) = v561 {
                            if let &SimpleAst::Neg {
                                a: v563,
                            } = v562 {
                                let v564 = &C::any(ctx, v563);
                                let v565 = C::lookup_id(ctx, v564);
                                let v566 = &C::any(ctx, v560);
                                let v567 = C::lookup_id(ctx, v566);
                                let v568 = &C::neg(ctx, v567);
                                let v569 = C::lookup_id(ctx, v568);
                                let v570 = &C::and(ctx, v565, v569);
                                // Rule at .\isle\mba.isle line 467.
                                return Some(v570.clone());
                            }
                        }
                    }
                    &SimpleAst::Xor {
                        a: v571,
                        b: v572,
                    } => {
                        let v573 = &C::lookup_value(ctx, v571);
                        if let Some(v574) = v573 {
                            if let &SimpleAst::Neg {
                                a: v575,
                            } = v574 {
                                let v576 = &C::any(ctx, v575);
                                let v577 = C::lookup_id(ctx, v576);
                                let v578 = &C::any(ctx, v572);
                                let v579 = C::lookup_id(ctx, v578);
                                let v580 = &C::xor(ctx, v577, v579);
                                // Rule at .\isle\mba.isle line 473.
                                return Some(v580.clone());
                            }
                        }
                    }
                    &SimpleAst::Neg {
                        a: v421,
                    } => {
                        let v422 = &C::any(ctx, v421);
                        // Rule at .\isle\mba.isle line 394.
                        return Some(v422.clone());
                    }
                    &SimpleAst::Constant {
                        c: v244,
                        width: v245,
                    } => {
                        let v246 = &C::constant(ctx, v244, v245);
                        let v247 = C::lookup_id(ctx, v246);
                        let v248 = &C::neg(ctx, v247);
                        // Rule at .\isle\mba.isle line 207.
                        return Some(v248.clone());
                    }
                    _ => {}
                }
            }
        }
        _ => {}
    }
    None
}
